{"version":3,"sources":["../../../src/lib/floating/useReferenceHiddenChangeCallback.ts"],"sourcesContent":["import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { type UseFloatingData } from './types/common';\nimport { type FloatingComponentProps } from './types/component';\n\nexport function useReferenceHiddenChangeCallback(\n  hideMiddleware: UseFloatingData['middlewareData']['hide'],\n  onReferenceHiddenChange: FloatingComponentProps['onReferenceHiddenChange'],\n) {\n  const prevHiddenRef = React.useRef<boolean | undefined>(hideMiddleware?.referenceHidden);\n  React.useEffect(() => {\n    prevHiddenRef.current = hideMiddleware?.referenceHidden;\n  });\n\n  useIsomorphicLayoutEffect(\n    function checkHiddenChanged() {\n      if (!onReferenceHiddenChange) {\n        return;\n      }\n      if (hideMiddleware?.referenceHidden !== prevHiddenRef.current) {\n        onReferenceHiddenChange(hideMiddleware?.referenceHidden || false);\n      }\n    },\n    [hideMiddleware?.referenceHidden, onReferenceHiddenChange],\n  );\n}\n"],"names":["React","useIsomorphicLayoutEffect","useReferenceHiddenChangeCallback","hideMiddleware","onReferenceHiddenChange","prevHiddenRef","useRef","referenceHidden","useEffect","current","checkHiddenChanged"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,yBAAyB,QAAQ,kCAA+B;AAIzE,OAAO,SAASC,iCACdC,cAAyD,EACzDC,uBAA0E;IAE1E,MAAMC,gBAAgBL,MAAMM,MAAM,CAAsBH,2BAAAA,qCAAAA,eAAgBI,eAAe;IACvFP,MAAMQ,SAAS,CAAC;QACdH,cAAcI,OAAO,GAAGN,2BAAAA,qCAAAA,eAAgBI,eAAe;IACzD;IAEAN,0BACE,SAASS;QACP,IAAI,CAACN,yBAAyB;YAC5B;QACF;QACA,IAAID,CAAAA,2BAAAA,qCAAAA,eAAgBI,eAAe,MAAKF,cAAcI,OAAO,EAAE;YAC7DL,wBAAwBD,CAAAA,2BAAAA,qCAAAA,eAAgBI,eAAe,KAAI;QAC7D;IACF,GACA;QAACJ,2BAAAA,qCAAAA,eAAgBI,eAAe;QAAEH;KAAwB;AAE9D"}