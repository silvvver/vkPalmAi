{"version":3,"sources":["../../src/lib/SSR.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { ConfigProviderOverride } from '../components/ConfigProvider/ConfigProviderOverride';\nimport { type BrowserInfo, computeBrowserInfo } from './browser';\nimport { type Direction } from './direction';\nimport { platform as getPlatform } from './platform';\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n  direction?: Direction;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SSR\n */\nexport const SSRWrapper: React.FC<SSRWrapperProps> = ({\n  userAgent,\n  browserInfo,\n  direction = 'ltr',\n  children,\n}) => {\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  return (\n    <ConfigProviderOverride direction={direction} platform={getPlatform(browserInfo)}>\n      {children}\n    </ConfigProviderOverride>\n  );\n};\n"],"names":["React","ConfigProviderOverride","computeBrowserInfo","platform","getPlatform","SSRWrapper","userAgent","browserInfo","direction","children"],"mappings":"AAAA;;AAEA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,sBAAsB,QAAQ,yDAAsD;AAC7F,SAA2BC,kBAAkB,QAAQ,eAAY;AAEjE,SAASC,YAAYC,WAAW,QAAQ,gBAAa;AASrD;;CAEC,GACD,OAAO,MAAMC,aAAwC,CAAC,EACpDC,SAAS,EACTC,WAAW,EACXC,YAAY,KAAK,EACjBC,QAAQ,EACT;IACC,IAAI,CAACF,eAAeD,WAAW;QAC7BC,cAAcL,mBAAmBI;IACnC;IAEA,qBACE,KAACL;QAAuBO,WAAWA;QAAWL,UAAUC,YAAYG;kBACjEE;;AAGP,EAAE"}