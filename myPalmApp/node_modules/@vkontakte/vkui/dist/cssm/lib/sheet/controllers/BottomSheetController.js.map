{"version":3,"sources":["../../../../../src/lib/sheet/controllers/BottomSheetController.ts"],"sourcesContent":["import { noop } from '@vkontakte/vkjs';\nimport { clamp } from '../../../helpers/math';\nimport { rubberbandIfOutOfBounds } from '../../animation';\nimport { getNearestOverflowAncestor, hasSelectionWithRangeType } from '../../dom';\nimport { UIPanGestureRecognizer } from '../../touch/UIPanGestureRecognizer';\nimport {\n  BLOCK_SHEET_BEHAVIOR_DATA_ATTRIBUTE_KEY,\n  DRAG_THRESHOLDS,\n  DYNAMIC_SNAP_POINT_DATA,\n  SNAP_POINT_DETENTS,\n} from '../constants';\nimport type { CSSTransitionController } from './CSSTransitionController';\n\nexport type SnapPointDetents = [number, number] | [number, number, number];\n\nexport type SnapPoint = 'auto' | { initial: number; detents: SnapPointDetents };\n\nexport type SnapPointChange = (snapPoint: number) => void;\n\nexport type BottomSheetControllerOptions = {\n  sheetScrollEl: HTMLElement | null;\n  sheetTransitionController: CSSTransitionController<string>;\n  backdropTransitionController: CSSTransitionController | null;\n  onSnapPointChange: SnapPointChange;\n  onDismiss: VoidFunction;\n};\n\nexport class BottomSheetController {\n  private readonly sheetEl: HTMLElement;\n\n  constructor(\n    sheetEl: HTMLElement,\n    {\n      sheetScrollEl,\n      sheetTransitionController,\n      backdropTransitionController,\n      onSnapPointChange,\n      onDismiss,\n    }: BottomSheetControllerOptions,\n  ) {\n    this.sheetEl = sheetEl;\n    this.onSnapPointChange = onSnapPointChange;\n    this.onDismiss = onDismiss;\n    this.panGestureRecognizer = new UIPanGestureRecognizer();\n    this.sheetScrollEl = sheetScrollEl;\n    this.sheetTransitionController = sheetTransitionController;\n    this.backdropTransitionController = backdropTransitionController;\n  }\n\n  init(snapPoint: SnapPoint) {\n    this.isInitialized = true;\n\n    if (snapPoint === 'auto') {\n      this.unit = 'px';\n      this.currentSnapPoint = DYNAMIC_SNAP_POINT_DATA.IDLE_POINT_VALUE;\n      this.snapPointDetents = [SNAP_POINT_DETENTS.MIN, DYNAMIC_SNAP_POINT_DATA.IDLE_POINT_VALUE];\n    } else {\n      this.unit = '%';\n      this.currentSnapPoint = snapPoint.initial;\n      this.snapPointDetents = snapPoint.detents;\n    }\n  }\n\n  destroy() {\n    this.isInitialized = false;\n    this.pannedEl = null;\n    this.sheetTransitionController.cleanup();\n    this.backdropTransitionController?.cleanup();\n\n    this.disableVerticalScrollBouncingDispose();\n    this.disableVerticalScrollBouncingDispose = noop;\n  }\n\n  panStart(event: UIEvent) {\n    if (\n      !this.isInitialized ||\n      this.panState !== 'idle' ||\n      hasSelectionWithRangeType(event.target)\n    ) {\n      return;\n    }\n\n    this.panState = 'start';\n    this.pannedEl = event.target as HTMLElement;\n    this.panGestureRecognizer.setStartCoords(event);\n  }\n\n  panMove(event: UIEvent) {\n    switch (this.panState) {\n      case 'start':\n        this.panGestureRecognizer.setInitialTimeOnce();\n        this.panGestureRecognizer.setEndCoords(event);\n\n        if (this.preventUntilPanGestureBecomesExpected()) {\n          return;\n        }\n\n        if (this.preventImmediatelyIfPannedElIsNotValid()) {\n          this.panState = 'idle';\n          return;\n        }\n\n        if (this.preventUntilVerticalScrollingOnSheetScrollElBecomesExpected()) {\n          return;\n        }\n\n        if (this.preventImmediatelyIfVerticalScrollingOnPannedElIsScrolled()) {\n          this.panState = 'idle';\n          return;\n        }\n\n        this.panState = 'moving';\n        this.panGestureRecognizer.setStartCoords(event);\n\n        this.sheetHeight = this.sheetEl.offsetHeight;\n\n        this.disableVerticalScrollBouncingDispose =\n          BottomSheetController.disableVerticalScrollBouncingIfNeeded(\n            this.sheetScrollEl,\n            this.pannedEl,\n          );\n\n        if (this.isDynamicSnapPoint) {\n          this.currentSnapPoint = this.sheetHeight;\n          this.snapPointDetents[DYNAMIC_SNAP_POINT_DATA.COMPUTED_INDEX] = this.sheetHeight;\n        }\n        break;\n      case 'moving':\n        this.panGestureRecognizer.setEndCoords(event);\n\n        const { y1, y2 } = this.panGestureRecognizer;\n\n        this.nextSnapPoint = rubberbandIfOutOfBounds(\n          this.currentSnapPoint - ((y2 - y1) / this.sheetHeight) * this.currentSnapPoint,\n          SNAP_POINT_DETENTS.MIN,\n          this.isDynamicSnapPoint ? this.sheetHeight : SNAP_POINT_DETENTS.LARGE,\n        );\n\n        this.calculateSnapPoint(this.nextSnapPoint, true);\n        break;\n    }\n  }\n\n  panEnd() {\n    switch (this.panState) {\n      case 'moving':\n        const prevCurrentSnapPoint = this.currentSnapPoint;\n        this.currentSnapPoint = this.getSnapPointTo(this.nextSnapPoint);\n\n        if (\n          prevCurrentSnapPoint !== this.currentSnapPoint &&\n          this.currentSnapPoint > SNAP_POINT_DETENTS.MIN\n        ) {\n          this.onSnapPointChange(this.currentSnapPoint);\n        }\n\n        this.calculateSnapPoint(this.currentSnapPoint);\n        break;\n    }\n\n    this.panState = 'idle';\n    this.panGestureRecognizer.reset();\n\n    this.disableVerticalScrollBouncingDispose();\n    this.disableVerticalScrollBouncingDispose = noop;\n  }\n\n  private isInitialized = false;\n  private panState: 'idle' | 'start' | 'moving' = 'idle';\n  private pannedEl: HTMLElement | null = null;\n  private sheetHeight = 0;\n  private rafId: number | null = null;\n  private currentSnapPoint = 0;\n  private nextSnapPoint = 0;\n  private snapPointDetents: SnapPointDetents = [0, 0];\n  private unit: 'px' | '%' = '%';\n  private get isDynamicSnapPoint() {\n    return this.unit === 'px';\n  }\n  private disableVerticalScrollBouncingDispose = noop;\n  private readonly sheetScrollEl: HTMLElement | null;\n  private readonly sheetTransitionController: CSSTransitionController<string>;\n  private readonly backdropTransitionController: CSSTransitionController | null;\n  private readonly panGestureRecognizer: UIPanGestureRecognizer;\n  private readonly onSnapPointChange: SnapPointChange;\n  private readonly onDismiss: VoidFunction;\n\n  private calculateSnapPoint(nextSnapPoint: number, immediately = false) {\n    if (this.rafId !== null) {\n      cancelAnimationFrame(this.rafId);\n    }\n\n    if (nextSnapPoint <= SNAP_POINT_DETENTS.MIN) {\n      this.sheetTransitionController.enableTransition();\n      this.backdropTransitionController?.enableTransition();\n      this.panState = 'idle';\n      this.onDismiss();\n      return;\n    }\n\n    const backdropOpacity = clamp(\n      this.isDynamicSnapPoint\n        ? nextSnapPoint / this.sheetHeight\n        : (nextSnapPoint * 2) / SNAP_POINT_DETENTS.LARGE,\n      0,\n      1,\n    );\n\n    this.rafId = requestAnimationFrame(() => {\n      if (immediately) {\n        this.backdropTransitionController?.disableTransition().set(backdropOpacity);\n        this.sheetTransitionController.disableTransition().set(`${nextSnapPoint}${this.unit}`);\n        return;\n      }\n\n      if (this.isDynamicSnapPoint) {\n        this.sheetTransitionController.cleanupOnTransitionEnd();\n      }\n\n      this.backdropTransitionController?.unset();\n      this.sheetTransitionController.enableTransition().set(`${this.currentSnapPoint}${this.unit}`);\n    });\n  }\n\n  private getSnapPointTo(nextSnapPoint: number) {\n    const closestSnapPoint = BottomSheetController.getClosestSnapPoint(\n      this.snapPointDetents,\n      nextSnapPoint,\n    );\n    if (closestSnapPoint !== this.currentSnapPoint) {\n      return closestSnapPoint;\n    }\n\n    const panDirection = this.panGestureRecognizer.direction();\n    if (panDirection.axis !== 'y' || panDirection.direction === null) {\n      return this.currentSnapPoint;\n    }\n\n    const velocity = this.panGestureRecognizer.velocity();\n    if (Math.abs(velocity.y) < DRAG_THRESHOLDS.VELOCITY) {\n      return this.currentSnapPoint;\n    }\n\n    const closestSnapPointByDirection = BottomSheetController.getClosestSnapPointByDirection(\n      this.snapPointDetents,\n      closestSnapPoint,\n      panDirection.direction,\n    );\n\n    return closestSnapPointByDirection;\n  }\n\n  private preventUntilPanGestureBecomesExpected() {\n    return (\n      this.panGestureRecognizer.direction().axis === 'x' ||\n      this.panGestureRecognizer.distance() < DRAG_THRESHOLDS.DISTANCE_FOR_MOVING_START\n    );\n  }\n\n  private preventImmediatelyIfPannedElIsNotValid() {\n    return (\n      this.pannedEl === null ||\n      // Элемент со специальным атрибутом\n      this.pannedEl.closest(`[${BLOCK_SHEET_BEHAVIOR_DATA_ATTRIBUTE_KEY}=true]`) !== null || // eslint-disable-line no-restricted-properties\n      // Элемент за пределами панели.\n      !this.sheetEl.contains(this.pannedEl)\n    );\n  }\n\n  private preventUntilVerticalScrollingOnSheetScrollElBecomesExpected() {\n    if (\n      this.sheetScrollEl === null ||\n      !this.sheetScrollEl.contains(this.pannedEl) ||\n      this.sheetScrollEl.scrollHeight <= this.sheetScrollEl.clientHeight\n    ) {\n      return false;\n    }\n\n    if (this.sheetScrollEl.scrollTop === 0) {\n      return (\n        this.panGestureRecognizer.direction().direction === -1 &&\n        BottomSheetController.isLastSnapPointDetents(this.snapPointDetents, this.currentSnapPoint)\n      );\n    }\n\n    return true;\n  }\n\n  private preventImmediatelyIfVerticalScrollingOnPannedElIsScrolled() {\n    if (\n      /* istanbul ignore next: покрываем TypeScript */\n      this.pannedEl === null ||\n      this.pannedEl === this.sheetEl ||\n      this.pannedEl === this.sheetScrollEl\n    ) {\n      return false;\n    }\n\n    const overflowAncestor = getNearestOverflowAncestor(this.pannedEl, this.sheetEl);\n\n    if (\n      overflowAncestor === null ||\n      this.sheetScrollEl === overflowAncestor ||\n      overflowAncestor.scrollHeight <= overflowAncestor.clientHeight\n    ) {\n      return false;\n    }\n\n    return (\n      overflowAncestor.scrollTop !== 0 || this.panGestureRecognizer.direction().direction === -1\n    );\n  }\n\n  private static disableVerticalScrollBouncingIfNeeded(\n    sheetScrollEl: HTMLElement | null,\n    targetEl: HTMLElement | null,\n  ) {\n    if (\n      sheetScrollEl !== null &&\n      sheetScrollEl.scrollTop <= 0 &&\n      sheetScrollEl.contains(targetEl) &&\n      sheetScrollEl.scrollHeight > sheetScrollEl.clientHeight\n    ) {\n      sheetScrollEl.style.setProperty('overflow-y', 'hidden');\n      return function dispose() {\n        sheetScrollEl.style.removeProperty('overflow-y');\n      };\n    }\n    return noop;\n  }\n\n  private static isLastSnapPointDetents(\n    snapPointDetents: SnapPointDetents,\n    currentY: number,\n  ): boolean {\n    return currentY === snapPointDetents[snapPointDetents.length - 1];\n  }\n\n  private static getClosestSnapPointByDirection(\n    snapPointDetents: SnapPointDetents,\n    currentY: number,\n    direction: -1 | 1,\n  ): number {\n    const foundIndex = snapPointDetents.findIndex((i) => i === currentY);\n    switch (direction) {\n      case -1:\n        return snapPointDetents[foundIndex + 1] ?? snapPointDetents[snapPointDetents.length - 1];\n      case 1:\n        return snapPointDetents[foundIndex - 1] ?? snapPointDetents[0];\n    }\n  }\n\n  private static getClosestSnapPoint(snapPointDetents: SnapPointDetents, currentY: number) {\n    let closest = snapPointDetents[0];\n    let minDifference = Math.abs(snapPointDetents[0] - currentY);\n\n    for (let i = 1; i < snapPointDetents.length; i += 1) {\n      const difference = Math.abs(snapPointDetents[i] - currentY);\n      if (difference < minDifference) {\n        closest = snapPointDetents[i];\n        minDifference = difference;\n      }\n    }\n\n    return closest;\n  }\n}\n"],"names":["noop","clamp","rubberbandIfOutOfBounds","getNearestOverflowAncestor","hasSelectionWithRangeType","UIPanGestureRecognizer","BLOCK_SHEET_BEHAVIOR_DATA_ATTRIBUTE_KEY","DRAG_THRESHOLDS","DYNAMIC_SNAP_POINT_DATA","SNAP_POINT_DETENTS","BottomSheetController","sheetEl","constructor","sheetScrollEl","sheetTransitionController","backdropTransitionController","onSnapPointChange","onDismiss","panGestureRecognizer","init","snapPoint","isInitialized","unit","currentSnapPoint","IDLE_POINT_VALUE","snapPointDetents","MIN","initial","detents","destroy","pannedEl","cleanup","disableVerticalScrollBouncingDispose","panStart","event","panState","target","setStartCoords","panMove","setInitialTimeOnce","setEndCoords","preventUntilPanGestureBecomesExpected","preventImmediatelyIfPannedElIsNotValid","preventUntilVerticalScrollingOnSheetScrollElBecomesExpected","preventImmediatelyIfVerticalScrollingOnPannedElIsScrolled","sheetHeight","offsetHeight","disableVerticalScrollBouncingIfNeeded","isDynamicSnapPoint","COMPUTED_INDEX","y1","y2","nextSnapPoint","LARGE","calculateSnapPoint","panEnd","prevCurrentSnapPoint","getSnapPointTo","reset","rafId","immediately","cancelAnimationFrame","enableTransition","backdropOpacity","requestAnimationFrame","disableTransition","set","cleanupOnTransitionEnd","unset","closestSnapPoint","getClosestSnapPoint","panDirection","direction","axis","velocity","Math","abs","y","VELOCITY","closestSnapPointByDirection","getClosestSnapPointByDirection","distance","DISTANCE_FOR_MOVING_START","closest","contains","scrollHeight","clientHeight","scrollTop","isLastSnapPointDetents","overflowAncestor","targetEl","style","setProperty","dispose","removeProperty","currentY","length","foundIndex","findIndex","i","minDifference","difference"],"mappings":"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"}