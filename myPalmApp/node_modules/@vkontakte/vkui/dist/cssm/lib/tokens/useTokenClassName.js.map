{"version":3,"sources":["../../../../src/lib/tokens/useTokenClassName.ts"],"sourcesContent":["import * as React from 'react';\nimport { ConfigProviderContext } from '../../components/ConfigProvider/ConfigProviderContext';\nimport { type ColorSchemeType, DEFAULT_COLOR_SCHEME } from '../colorScheme';\nimport { Platform, type PlatformType } from '../platform';\nimport { DEFAULT_TOKENS_CLASS_NAMES } from './constants';\nimport type {\n  TokensClassNames,\n  TokensClassNamesByAppearances,\n  TokensClassNamesByPlatforms,\n} from './types';\n\nconst isTokensClassNamesForPlatforms = (\n  tokensClassNames: TokensClassNames,\n): tokensClassNames is TokensClassNamesByPlatforms =>\n  Platform.ANDROID in tokensClassNames ||\n  Platform.IOS in tokensClassNames ||\n  Platform.VKCOM in tokensClassNames;\n\nconst getTokenClassNameByAppearance = (\n  colorScheme: ColorSchemeType,\n  tokensClassNames?: TokensClassNamesByAppearances,\n) => (tokensClassNames ? tokensClassNames[colorScheme] : undefined);\n\nconst getAppearanceTokenClassNameByPlatform = (\n  platform: PlatformType,\n  tokensClassNames?: TokensClassNamesByPlatforms,\n) => (tokensClassNames ? tokensClassNames[platform] : undefined);\n\n/**\n * @private\n */\nexport const useTokensClassName = (): string => {\n  const {\n    platform,\n    colorScheme = DEFAULT_COLOR_SCHEME,\n    tokensClassNames,\n  } = React.useContext(ConfigProviderContext);\n\n  const colorSchemeClassName = isTokensClassNamesForPlatforms(tokensClassNames)\n    ? getAppearanceTokenClassNameByPlatform(platform, tokensClassNames)\n    : tokensClassNames;\n\n  const tokensClassName = getTokenClassNameByAppearance(colorScheme, colorSchemeClassName);\n\n  return tokensClassName ? tokensClassName : DEFAULT_TOKENS_CLASS_NAMES[platform][colorScheme];\n};\n"],"names":["React","ConfigProviderContext","DEFAULT_COLOR_SCHEME","Platform","DEFAULT_TOKENS_CLASS_NAMES","isTokensClassNamesForPlatforms","tokensClassNames","ANDROID","IOS","VKCOM","getTokenClassNameByAppearance","colorScheme","undefined","getAppearanceTokenClassNameByPlatform","platform","useTokensClassName","useContext","colorSchemeClassName","tokensClassName"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,qBAAqB,QAAQ,2DAAwD;AAC9F,SAA+BC,oBAAoB,QAAQ,0BAAiB;AAC5E,SAASC,QAAQ,QAA2B,iBAAc;AAC1D,SAASC,0BAA0B,QAAQ,iBAAc;AAOzD,MAAMC,iCAAiC,CACrCC,mBAEAH,SAASI,OAAO,IAAID,oBACpBH,SAASK,GAAG,IAAIF,oBAChBH,SAASM,KAAK,IAAIH;AAEpB,MAAMI,gCAAgC,CACpCC,aACAL,mBACIA,mBAAmBA,gBAAgB,CAACK,YAAY,GAAGC;AAEzD,MAAMC,wCAAwC,CAC5CC,UACAR,mBACIA,mBAAmBA,gBAAgB,CAACQ,SAAS,GAAGF;AAEtD;;CAEC,GACD,OAAO,MAAMG,qBAAqB;IAChC,MAAM,EACJD,QAAQ,EACRH,cAAcT,oBAAoB,EAClCI,gBAAgB,EACjB,GAAGN,MAAMgB,UAAU,CAACf;IAErB,MAAMgB,uBAAuBZ,+BAA+BC,oBACxDO,sCAAsCC,UAAUR,oBAChDA;IAEJ,MAAMY,kBAAkBR,8BAA8BC,aAAaM;IAEnE,OAAOC,kBAAkBA,kBAAkBd,0BAA0B,CAACU,SAAS,CAACH,YAAY;AAC9F,EAAE"}