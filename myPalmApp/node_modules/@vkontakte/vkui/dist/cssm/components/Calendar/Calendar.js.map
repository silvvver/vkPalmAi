{"version":3,"sources":["../../../../src/components/Calendar/Calendar.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { isSameDay, isSameMonth, startOfMonth } from 'date-fns';\nimport { useCalendar } from '../../hooks/useCalendar';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { Keys, pressedKey } from '../../lib/accessibility';\nimport {\n  clamp,\n  isFirstDay,\n  isLastDay,\n  navigateDate,\n  NAVIGATION_KEYS,\n  setTimeEqual,\n} from '../../lib/calendar';\nimport { convertDateFromTimeZone, convertDateToTimeZone } from '../../lib/date';\nimport { isHTMLElement } from '../../lib/dom';\nimport { useIsomorphicLayoutEffect } from '../../lib/useIsomorphicLayoutEffect';\nimport { warnOnce } from '../../lib/warnOnce';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport {\n  CalendarDays,\n  type CalendarDaysProps,\n  type CalendarDaysTestsProps,\n} from '../CalendarDays/CalendarDays';\nimport {\n  CalendarHeader,\n  type CalendarHeaderProps,\n  type CalendarHeaderTestsProps,\n} from '../CalendarHeader/CalendarHeader';\nimport {\n  type CalendarDoneButtonProps,\n  CalendarTime,\n  type CalendarTimeProps,\n  type CalendarTimeTestsProps,\n} from '../CalendarTime/CalendarTime';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport styles from './Calendar.module.css';\n\nexport type CalendarTestsProps = CalendarDaysTestsProps &\n  CalendarHeaderTestsProps &\n  CalendarTimeTestsProps;\n\nexport interface CalendarProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange' | 'defaultValue'>,\n    Pick<CalendarTimeProps, 'changeHoursLabel' | 'changeMinutesLabel'>,\n    Pick<\n      CalendarHeaderProps,\n      | 'prevMonthLabel'\n      | 'nextMonthLabel'\n      | 'changeMonthLabel'\n      | 'changeYearLabel'\n      | 'onNextMonth'\n      | 'onPrevMonth'\n      | 'prevMonthIcon'\n      | 'nextMonthIcon'\n      | 'prevMonthProps'\n      | 'nextMonthProps'\n    >,\n    Pick<CalendarDaysProps, 'dayProps' | 'listenDayChangesForUpdate' | 'renderDayContent'>,\n    CalendarDoneButtonProps,\n    CalendarTestsProps {\n  /**\n   * Текущая выбранная дата.\n   */\n  value?: Date | null;\n  /**\n   * Начальная дата при монтировании.\n   */\n  defaultValue?: Date | null;\n  /**\n   * Запрещает выбор даты в прошлом.\n   * Применяется, если не заданы `shouldDisableDate` и `disableFuture`.\n   */\n  disablePast?: boolean;\n  /**\n   * Запрещает выбор даты в будущем.\n   * Применяется, если не задано `shouldDisableDate`.\n   */\n  disableFuture?: boolean;\n  /**\n   * Включает выбор времени.\n   */\n  enableTime?: boolean;\n  /**\n   * Отключает селекторы выбора месяца/года.\n   */\n  disablePickers?: boolean;\n  /**\n   * `aria-label` для изменения дня.\n   *\n   * @deprecated Будет удалeно в **VKUI v8**.\n   * Использовалось для задания aria-label для контейнера дней в календаре.\n   * Теперь этот контейнер является таблицей (с помощью role=\"grid\") и\n   * в aria-label рендерится текущий открытый в календаре месяц и год.\n   */\n  changeDayLabel?: string;\n  /**\n   * День недели, с которого начинается неделя.\n   */\n  weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  /**\n   * Показывать дни соседних месяцев.\n   */\n  showNeighboringMonth?: boolean;\n  /**\n   * Размер календаря.\n   */\n  size?: 's' | 'm';\n  /**\n   * Обработчик изменения выбранной даты.\n   */\n  onChange?: (value?: Date) => void; // TODO [>=8]: поменять тип на `(value?: Date | null) => void`\n  /**\n   * Функция для проверки запрета выбора даты.\n   */\n  shouldDisableDate?: (value: Date) => boolean;\n  /**\n   * Дата отображаемого месяца.\n   * При использовании обновление даты должно происходить вне компонента.\n   */\n  viewDate?: Date;\n  /**\n   * Обработчик изменения даты в шапке календаря.\n   */\n  onHeaderChange?: (value: Date) => void;\n  /**\n   * Минимальные дата и время, которые можно выбрать.\n   * Применяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.\n   */\n  minDateTime?: Date;\n  /**\n   * Максимальные дата и время, которые можно выбрать.\n   * Применяется, если не заданы `shouldDisableDate` и `disablePast`/`disableFuture`.\n   */\n  maxDateTime?: Date;\n  /**\n   * Часовой пояс для отображения даты.\n   */\n  timezone?: string;\n}\n\nconst warn = warnOnce('Calendar');\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Calendar\n */\nexport const Calendar = ({\n  getRootRef,\n  'value': valueProp,\n  defaultValue,\n  onChange,\n  disablePast,\n  disableFuture,\n  shouldDisableDate,\n  onDoneButtonClick,\n  enableTime = false,\n  doneButtonText,\n  doneButtonDisabled,\n  doneButtonShow,\n  DoneButton,\n  weekStartsOn = 1,\n  disablePickers,\n  'aria-label': ariaLabel = 'Календарь',\n  changeHoursLabel = 'Изменить час',\n  changeMinutesLabel = 'Изменить минуту',\n  prevMonthLabel = 'Предыдущий месяц',\n  nextMonthLabel = 'Следующий месяц',\n  changeMonthLabel = 'Изменить месяц',\n  changeYearLabel = 'Изменить год',\n  showNeighboringMonth,\n  size = 'm',\n  'viewDate': externalViewDate,\n  onHeaderChange,\n  onNextMonth,\n  onPrevMonth,\n  prevMonthIcon,\n  nextMonthIcon,\n  prevMonthProps,\n  nextMonthProps,\n  dayProps,\n  listenDayChangesForUpdate,\n  renderDayContent,\n  minDateTime,\n  maxDateTime,\n  timezone,\n  minutesTestId,\n  hoursTestId,\n  doneButtonTestId,\n  prevMonthButtonTestId,\n  nextMonthButtonTestId,\n  monthDropdownTestId,\n  yearDropdownTestId,\n  dayTestId,\n  ...props\n}: CalendarProps): React.ReactNode => {\n  const _onChange = React.useCallback(\n    (date: Date | null | undefined) => {\n      onChange?.(convertDateFromTimeZone(date, timezone) || undefined);\n    },\n    [onChange, timezone],\n  );\n\n  const [value, updateValue] = useCustomEnsuredControl<Date | null | undefined>({\n    value: valueProp,\n    defaultValue,\n    onChange: _onChange,\n  });\n\n  const timeZonedValue: Date | null | undefined = React.useMemo(\n    () => convertDateToTimeZone(value, timezone),\n    [timezone, value],\n  );\n\n  const {\n    viewDate,\n    setViewDate,\n    setPrevMonth,\n    setNextMonth,\n    focusedDay,\n    setFocusedDay,\n    focusableDay,\n    setFocusableDay,\n    isDayFocused,\n    isDayDisabled,\n    isMonthDisabled,\n    isYearDisabled,\n  } = useCalendar({\n    value: timeZonedValue,\n    disableFuture,\n    disablePast,\n    shouldDisableDate,\n    onHeaderChange,\n    onNextMonth,\n    onPrevMonth,\n    minDateTime,\n    maxDateTime,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    if (timeZonedValue) {\n      setViewDate(timeZonedValue);\n    }\n  }, [timeZonedValue]);\n\n  if (process.env.NODE_ENV === 'development' && !disablePickers && size === 's') {\n    warn(\"Нельзя включить селекты выбора месяца/года, если размер календаря 's'\", 'error');\n  }\n\n  if (process.env.NODE_ENV === 'development' && enableTime && size === 's') {\n    warn(\"Нельзя включить выбор времени, если размер календаря 's'\", 'error');\n  }\n\n  const handleKeyDown = React.useCallback(\n    (event: React.KeyboardEvent) => {\n      const key = pressedKey(event);\n      if (key && NAVIGATION_KEYS.includes(key)) {\n        event.preventDefault();\n\n        const newFocusedDay = navigateDate(focusedDay ?? timeZonedValue, key);\n\n        if (newFocusedDay && !isSameMonth(newFocusedDay, viewDate)) {\n          setViewDate(newFocusedDay);\n        }\n        setFocusedDay(newFocusedDay);\n        setFocusableDay(newFocusedDay);\n\n        return;\n      }\n\n      if (key === Keys.TAB) {\n        setFocusedDay(undefined);\n        setFocusableDay(focusedDay);\n\n        return;\n      }\n\n      if ((key === Keys.ENTER || key === Keys.SPACE) && isHTMLElement(event.target)) {\n        event.preventDefault();\n        event.target.click?.();\n      }\n    },\n    [focusedDay, setFocusedDay, setFocusableDay, setViewDate, timeZonedValue, viewDate],\n  );\n\n  const onDayChange = React.useCallback(\n    (date: Date) => {\n      let actualDate = setTimeEqual(date, timeZonedValue);\n      if (minDateTime || maxDateTime) {\n        actualDate = clamp(actualDate, { min: minDateTime, max: maxDateTime });\n      }\n      updateValue(actualDate);\n      setFocusedDay(actualDate);\n      setFocusableDay(actualDate);\n    },\n    [timeZonedValue, updateValue, maxDateTime, minDateTime, setFocusedDay, setFocusableDay],\n  );\n\n  const onDayFocus = React.useCallback(\n    (date: Date) => {\n      if (focusedDay && isSameDay(focusedDay, date)) {\n        return;\n      }\n\n      setFocusedDay(date);\n    },\n    [focusedDay, setFocusedDay],\n  );\n\n  // activeDay это день в календаре соответствующий значению в инпуте\n  const isDayActive = React.useCallback(\n    (day: Date) => Boolean(timeZonedValue && isSameDay(day, timeZonedValue)),\n    [timeZonedValue],\n  );\n\n  const isFocusableDayInViewDateMonth = focusableDay && isSameMonth(focusableDay, viewDate);\n  const isInputValueDateInViewDateMonth = timeZonedValue && isSameMonth(timeZonedValue, viewDate);\n  /**\n   * Функция позволяет проверить является ли день в календаре днём на который\n   * можно попасть с помощью Tab.\n   * Единственный день в таблице календаря у которого есть tabIndex=\"0\"\n   * Чтобы на него можно было попасть из заголовка календаря.\n   */\n  const isDayFocusable = React.useCallback(\n    (day: Date) => {\n      // если focusableDay день находится среди дней открытого сейчас месяца, то такой день получит tabIndex=\"0\",\n      if (isFocusableDayInViewDateMonth) {\n        return isSameDay(focusableDay, day);\n      }\n\n      // при открытии календаря focusableDay не определён,\n      // поэтому tabIndex=\"0\" будет у дня, соответствующего дню в инпуте\n      if (isInputValueDateInViewDateMonth) {\n        return isDayActive(day);\n      }\n\n      // при переключении месяца любая навигация с помощью Tab начинается\n      // с первого дня месяца.\n      return isSameDay(startOfMonth(viewDate), day);\n    },\n    [\n      focusableDay,\n      viewDate,\n      isDayActive,\n      isFocusableDayInViewDateMonth,\n      isInputValueDateInViewDateMonth,\n    ],\n  );\n\n  return (\n    <RootComponent\n      aria-label={ariaLabel}\n      {...props}\n      baseClassName={classNames(styles.host, size === 's' && styles.sizeS)}\n      getRootRef={getRootRef}\n    >\n      <CalendarHeader\n        viewDate={externalViewDate || viewDate}\n        onChange={setViewDate}\n        onNextMonth={setNextMonth}\n        onPrevMonth={setPrevMonth}\n        disablePickers={disablePickers || size === 's'}\n        className={styles.header}\n        prevMonthLabel={prevMonthLabel}\n        nextMonthLabel={nextMonthLabel}\n        changeMonthLabel={changeMonthLabel}\n        changeYearLabel={changeYearLabel}\n        prevMonthIcon={prevMonthIcon}\n        nextMonthIcon={nextMonthIcon}\n        prevMonthProps={prevMonthProps}\n        nextMonthProps={nextMonthProps}\n        isMonthDisabled={isMonthDisabled}\n        isYearDisabled={isYearDisabled}\n        nextMonthButtonTestId={nextMonthButtonTestId}\n        prevMonthButtonTestId={prevMonthButtonTestId}\n        monthDropdownTestId={monthDropdownTestId}\n        yearDropdownTestId={yearDropdownTestId}\n      />\n      <CalendarDays\n        viewDate={externalViewDate || viewDate}\n        value={timeZonedValue}\n        weekStartsOn={weekStartsOn}\n        onKeyDown={handleKeyDown}\n        onDayChange={onDayChange}\n        isDayActive={isDayActive}\n        onDayFocus={onDayFocus}\n        isDayFocused={isDayFocused}\n        isDayFocusable={isDayFocusable}\n        isDaySelectionStart={isFirstDay}\n        isDaySelectionEnd={isLastDay}\n        isDayDisabled={isDayDisabled}\n        showNeighboringMonth={showNeighboringMonth}\n        size={size}\n        dayProps={dayProps}\n        listenDayChangesForUpdate={listenDayChangesForUpdate}\n        renderDayContent={renderDayContent}\n        dayTestId={dayTestId}\n      />\n      {enableTime && timeZonedValue && size !== 's' && (\n        <div className={styles.time}>\n          <CalendarTime\n            value={timeZonedValue}\n            onChange={updateValue}\n            onDoneButtonClick={onDoneButtonClick}\n            doneButtonText={doneButtonText}\n            doneButtonDisabled={doneButtonDisabled}\n            doneButtonShow={doneButtonShow}\n            DoneButton={DoneButton}\n            changeHoursLabel={changeHoursLabel}\n            changeMinutesLabel={changeMinutesLabel}\n            isDayDisabled={minDateTime || maxDateTime ? isDayDisabled : undefined}\n            minutesTestId={minutesTestId}\n            hoursTestId={hoursTestId}\n            doneButtonTestId={doneButtonTestId}\n          />\n        </div>\n      )}\n    </RootComponent>\n  );\n};\n"],"names":["React","classNames","isSameDay","isSameMonth","startOfMonth","useCalendar","useCustomEnsuredControl","Keys","pressedKey","clamp","isFirstDay","isLastDay","navigateDate","NAVIGATION_KEYS","setTimeEqual","convertDateFromTimeZone","convertDateToTimeZone","isHTMLElement","useIsomorphicLayoutEffect","warnOnce","CalendarDays","CalendarHeader","CalendarTime","RootComponent","styles","warn","Calendar","getRootRef","valueProp","defaultValue","onChange","disablePast","disableFuture","shouldDisableDate","onDoneButtonClick","enableTime","doneButtonText","doneButtonDisabled","doneButtonShow","DoneButton","weekStartsOn","disablePickers","ariaLabel","changeHoursLabel","changeMinutesLabel","prevMonthLabel","nextMonthLabel","changeMonthLabel","changeYearLabel","showNeighboringMonth","size","externalViewDate","onHeaderChange","onNextMonth","onPrevMonth","prevMonthIcon","nextMonthIcon","prevMonthProps","nextMonthProps","dayProps","listenDayChangesForUpdate","renderDayContent","minDateTime","maxDateTime","timezone","minutesTestId","hoursTestId","doneButtonTestId","prevMonthButtonTestId","nextMonthButtonTestId","monthDropdownTestId","yearDropdownTestId","dayTestId","props","_onChange","useCallback","date","undefined","value","updateValue","timeZonedValue","useMemo","viewDate","setViewDate","setPrevMonth","setNextMonth","focusedDay","setFocusedDay","focusableDay","setFocusableDay","isDayFocused","isDayDisabled","isMonthDisabled","isYearDisabled","process","env","NODE_ENV","handleKeyDown","event","key","includes","preventDefault","newFocusedDay","TAB","ENTER","SPACE","target","click","onDayChange","actualDate","min","max","onDayFocus","isDayActive","day","Boolean","isFocusableDayInViewDateMonth","isInputValueDateInViewDateMonth","isDayFocusable","aria-label","baseClassName","host","sizeS","className","header","onKeyDown","isDaySelectionStart","isDaySelectionEnd","div","time"],"mappings":"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"}