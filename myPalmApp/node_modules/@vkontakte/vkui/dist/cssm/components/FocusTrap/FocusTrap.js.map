{"version":3,"sources":["../../../../src/components/FocusTrap/FocusTrap.tsx"],"sourcesContent":["'use client';\n\nimport { type AllHTMLAttributes } from 'react';\nimport { useExternRef } from '../../hooks/useExternRef';\nimport { useFocusTrap, type UseFocusTrapProps } from '../../hooks/useFocusTrap';\nimport type { HasComponent, HasRootRef } from '../../types';\n\nexport interface FocusTrapProps<T extends HTMLElement = HTMLElement>\n  extends UseFocusTrapProps,\n    Omit<AllHTMLAttributes<T>, keyof UseFocusTrapProps>,\n    HasRootRef<T>,\n    HasComponent {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusTrap\n */\nexport const FocusTrap = <T extends HTMLElement = HTMLElement>({\n  Component = 'div',\n  onClose,\n  autoFocus = true,\n  restoreFocus = true,\n  disabled = false,\n  mount = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  captureEscapeKeyboardEvent = true,\n  ...restProps\n}: FocusTrapProps<T>): React.ReactNode => {\n  const ref = useExternRef<T>(getRootRef);\n\n  useFocusTrap(ref, {\n    autoFocus,\n    restoreFocus,\n    disabled,\n    mount,\n    timeout,\n    onClose,\n    captureEscapeKeyboardEvent,\n  });\n\n  return (\n    <Component tabIndex={-1} ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n"],"names":["useExternRef","useFocusTrap","FocusTrap","Component","onClose","autoFocus","restoreFocus","disabled","mount","timeout","getRootRef","children","captureEscapeKeyboardEvent","restProps","ref","tabIndex"],"mappings":"AAAA;;AAGA,SAASA,YAAY,QAAQ,8BAA2B;AACxD,SAASC,YAAY,QAAgC,8BAA2B;AAShF;;CAEC,GACD,OAAO,MAAMC,YAAY,CAAsC,EAC7DC,YAAY,KAAK,EACjBC,OAAO,EACPC,YAAY,IAAI,EAChBC,eAAe,IAAI,EACnBC,WAAW,KAAK,EAChBC,QAAQ,IAAI,EACZC,UAAU,CAAC,EACXC,UAAU,EACVC,QAAQ,EACRC,6BAA6B,IAAI,EACjC,GAAGC,WACe;IAClB,MAAMC,MAAMd,aAAgBU;IAE5BT,aAAaa,KAAK;QAChBT;QACAC;QACAC;QACAC;QACAC;QACAL;QACAQ;IACF;IAEA,qBACE,KAACT;QAAUY,UAAU,CAAC;QAAGD,KAAKA;QAAM,GAAGD,SAAS;kBAC7CF;;AAGP,EAAE"}