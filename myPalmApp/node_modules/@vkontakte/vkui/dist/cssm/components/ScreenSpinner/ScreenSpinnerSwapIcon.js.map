{"version":3,"sources":["../../../../src/components/ScreenSpinner/ScreenSpinnerSwapIcon.tsx"],"sourcesContent":["'use client';\n/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { Icon24Cancel } from '@vkontakte/icons';\nimport { mergeCalls } from '../../lib/mergeCalls';\nimport { clickByKeyboardHandler } from '../../lib/utils';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Icon48CancelCircle } from './Icon48CancelCircle';\nimport { Icon48DoneOutline } from './Icon48DoneOutline';\nimport { ScreenSpinnerContext } from './context';\nimport { type ScreenSpinnerProps } from './types';\nimport styles from './ScreenSpinner.module.css';\n\ntype ScreenSpinnerSwapIconProps = HTMLAttributesWithRootRef<HTMLElement> & {\n  cancelLabel?: ScreenSpinnerProps['cancelLabel'];\n};\n\nconst ScreenSpinnerCancelIcon = ({\n  onKeyDown,\n  'aria-label': ariaLabel = 'Отменить',\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const handlers = mergeCalls(\n    { onKeyDown: clickByKeyboardHandler },\n    {\n      onKeyDown,\n    },\n  );\n  let clickableProps: React.HTMLAttributes<HTMLSpanElement> = {\n    ...handlers,\n    'tabIndex': 0,\n    'role': 'button',\n    'aria-label': ariaLabel,\n  };\n\n  return (\n    <RootComponent baseClassName={styles.icon} {...clickableProps} {...restProps}>\n      <Icon24Cancel />\n    </RootComponent>\n  );\n};\n\nexport const ScreenSpinnerSwapIcon = ({\n  cancelLabel,\n  ...restProps\n}: ScreenSpinnerSwapIconProps) => {\n  const { state, customIcon } = React.useContext(ScreenSpinnerContext);\n\n  if (state === 'cancelable') {\n    return <ScreenSpinnerCancelIcon aria-label={cancelLabel} {...restProps} />;\n  }\n\n  const getContent = () => {\n    if (state === 'custom') {\n      return customIcon;\n    }\n\n    const Icon = {\n      loading: () => null,\n      done: Icon48DoneOutline,\n      error: Icon48CancelCircle,\n    }[state];\n\n    return <Icon />;\n  };\n\n  return (\n    <RootComponent baseClassName={styles.icon} {...restProps}>\n      {getContent()}\n    </RootComponent>\n  );\n};\n"],"names":["React","Icon24Cancel","mergeCalls","clickByKeyboardHandler","RootComponent","Icon48CancelCircle","Icon48DoneOutline","ScreenSpinnerContext","styles","ScreenSpinnerCancelIcon","onKeyDown","ariaLabel","restProps","handlers","clickableProps","baseClassName","icon","ScreenSpinnerSwapIcon","cancelLabel","state","customIcon","useContext","aria-label","getContent","Icon","loading","done","error"],"mappings":"AAAA;;AACA,sCAAsC,GAEtC,YAAYA,WAAW,QAAQ;AAC/B,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,UAAU,QAAQ,0BAAuB;AAClD,SAASC,sBAAsB,QAAQ,qBAAkB;AAEzD,SAASC,aAAa,QAAQ,oCAAiC;AAC/D,SAASC,kBAAkB,QAAQ,0BAAuB;AAC1D,SAASC,iBAAiB,QAAQ,yBAAsB;AACxD,SAASC,oBAAoB,QAAQ,eAAY;AAEjD,OAAOC,YAAY,6BAA6B;AAMhD,MAAMC,0BAA0B,CAAC,EAC/BC,SAAS,EACT,cAAcC,YAAY,UAAU,EACpC,GAAGC,WACwB;IAC3B,MAAMC,WAAWX,WACf;QAAEQ,WAAWP;IAAuB,GACpC;QACEO;IACF;IAEF,IAAII,iBAAwD;QAC1D,GAAGD,QAAQ;QACX,YAAY;QACZ,QAAQ;QACR,cAAcF;IAChB;IAEA,qBACE,KAACP;QAAcW,eAAeP,OAAOQ,IAAI;QAAG,GAAGF,cAAc;QAAG,GAAGF,SAAS;kBAC1E,cAAA,KAACX;;AAGP;AAEA,OAAO,MAAMgB,wBAAwB,CAAC,EACpCC,WAAW,EACX,GAAGN,WACwB;IAC3B,MAAM,EAAEO,KAAK,EAAEC,UAAU,EAAE,GAAGpB,MAAMqB,UAAU,CAACd;IAE/C,IAAIY,UAAU,cAAc;QAC1B,qBAAO,KAACV;YAAwBa,cAAYJ;YAAc,GAAGN,SAAS;;IACxE;IAEA,MAAMW,aAAa;QACjB,IAAIJ,UAAU,UAAU;YACtB,OAAOC;QACT;QAEA,MAAMI,OAAO;YACXC,SAAS,IAAM;YACfC,MAAMpB;YACNqB,OAAOtB;QACT,CAAC,CAACc,MAAM;QAER,qBAAO,KAACK;IACV;IAEA,qBACE,KAACpB;QAAcW,eAAeP,OAAOQ,IAAI;QAAG,GAAGJ,SAAS;kBACrDW;;AAGP,EAAE"}