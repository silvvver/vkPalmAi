{"version":3,"sources":["../../../../src/components/PullToRefresh/PullToRefreshSpinner.tsx"],"sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\n\nimport { classNames } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './PullToRefresh.module.css';\n\nfunction calcStrokeDashOffset(value: number, radius: number) {\n  const progress = value / 100;\n  return 2 * Math.PI * radius * (1 - progress);\n}\n\nexport interface PullToRefreshSpinnerProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  size?: number;\n  strokeWidth?: number;\n  on?: boolean;\n  progress?: number;\n}\n\nexport const PullToRefreshSpinner = ({\n  on = true,\n  size = 24,\n  strokeWidth = 2.5,\n  progress = 0,\n  children = 'Пожалуйста, подождите...',\n  ...restProps\n}: PullToRefreshSpinnerProps): React.ReactNode => {\n  const radius = 0.5 * size - 0.5 * strokeWidth;\n  const dasharray = 2 * Math.PI * radius;\n  const circleCenter = 0.5 * size;\n\n  const dashoffset = calcStrokeDashOffset(on ? 80 : progress, radius);\n\n  return (\n    <RootComponent\n      baseClassName={classNames(styles.spinner, on && styles.spinnerOn)}\n      {...restProps}\n    >\n      {on && <VisuallyHidden>{children}</VisuallyHidden>}\n      <svg\n        role=\"presentation\"\n        className={styles.spinnerSelf}\n        style={{\n          width: size,\n          height: size,\n        }}\n        viewBox={`0 0 ${size} ${size}`}\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g\n          style={{\n            width: size,\n            height: size,\n            transformOrigin: `${circleCenter}px ${circleCenter}px`,\n          }}\n        >\n          <circle\n            className={styles.spinnerPath}\n            fill=\"none\"\n            strokeDasharray={dasharray}\n            strokeDashoffset={dashoffset}\n            strokeWidth={strokeWidth}\n            strokeLinecap=\"round\"\n            cx={circleCenter}\n            cy={circleCenter}\n            r={radius}\n          />\n        </g>\n      </svg>\n    </RootComponent>\n  );\n};\n"],"names":["classNames","RootComponent","VisuallyHidden","styles","calcStrokeDashOffset","value","radius","progress","Math","PI","PullToRefreshSpinner","on","size","strokeWidth","children","restProps","dasharray","circleCenter","dashoffset","baseClassName","spinner","spinnerOn","svg","role","className","spinnerSelf","style","width","height","viewBox","xmlns","g","transformOrigin","circle","spinnerPath","fill","strokeDasharray","strokeDashoffset","strokeLinecap","cx","cy","r"],"mappings":"AAAA,sCAAsC;AAEtC,SAASA,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,aAAa,QAAQ,oCAAiC;AAC/D,SAASC,cAAc,QAAQ,sCAAmC;AAClE,OAAOC,YAAY,6BAA6B;AAEhD,SAASC,qBAAqBC,KAAa,EAAEC,MAAc;IACzD,MAAMC,WAAWF,QAAQ;IACzB,OAAO,IAAIG,KAAKC,EAAE,GAAGH,SAAU,CAAA,IAAIC,QAAO;AAC5C;AASA,OAAO,MAAMG,uBAAuB,CAAC,EACnCC,KAAK,IAAI,EACTC,OAAO,EAAE,EACTC,cAAc,GAAG,EACjBN,WAAW,CAAC,EACZO,WAAW,0BAA0B,EACrC,GAAGC,WACuB;IAC1B,MAAMT,SAAS,MAAMM,OAAO,MAAMC;IAClC,MAAMG,YAAY,IAAIR,KAAKC,EAAE,GAAGH;IAChC,MAAMW,eAAe,MAAML;IAE3B,MAAMM,aAAad,qBAAqBO,KAAK,KAAKJ,UAAUD;IAE5D,qBACE,MAACL;QACCkB,eAAenB,WAAWG,OAAOiB,OAAO,EAAET,MAAMR,OAAOkB,SAAS;QAC/D,GAAGN,SAAS;;YAEZJ,oBAAM,KAACT;0BAAgBY;;0BACxB,KAACQ;gBACCC,MAAK;gBACLC,WAAWrB,OAAOsB,WAAW;gBAC7BC,OAAO;oBACLC,OAAOf;oBACPgB,QAAQhB;gBACV;gBACAiB,SAAS,CAAC,IAAI,EAAEjB,KAAK,CAAC,EAAEA,MAAM;gBAC9BkB,OAAM;0BAEN,cAAA,KAACC;oBACCL,OAAO;wBACLC,OAAOf;wBACPgB,QAAQhB;wBACRoB,iBAAiB,GAAGf,aAAa,GAAG,EAAEA,aAAa,EAAE,CAAC;oBACxD;8BAEA,cAAA,KAACgB;wBACCT,WAAWrB,OAAO+B,WAAW;wBAC7BC,MAAK;wBACLC,iBAAiBpB;wBACjBqB,kBAAkBnB;wBAClBL,aAAaA;wBACbyB,eAAc;wBACdC,IAAItB;wBACJuB,IAAIvB;wBACJwB,GAAGnC;;;;;;AAMf,EAAE"}