{"version":3,"sources":["../../../../src/components/Tooltip/useTooltip.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { type Ref, useCallback } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport {\n  type FloatingComponentProps,\n  useFloatingElement,\n  type UseFloatingElementProps,\n} from '../../hooks/useFloatingElement';\nimport { animationFadeClassNames } from '../../lib/animation';\nimport { getArrowCoordsByMiddlewareData } from '../../lib/floating';\nimport { type ReferenceProps } from '../../lib/floating/useFloatingWithInteractions/types';\nimport { AppRootPortal } from '../AppRoot/AppRootPortal';\nimport { TooltipBase } from '../TooltipBase/TooltipBase';\nimport { type TooltipProps } from './Tooltip';\n\nexport type UseTooltipProps = Omit<TooltipProps, 'children'> & {\n  [key: `data-${string}`]: string | number | boolean;\n};\n\nexport type UseTooltipResult<ElementType extends HTMLElement = HTMLElement> = {\n  /**\n   * Реф на якорный элемент.\n   */\n  anchorRef: Ref<ElementType>;\n  /**\n   * Свойства для якорного элемента, содержит необходимые обработчики.\n   */\n  anchorProps: ReferenceProps<ElementType>;\n  /**\n   * Отрендеренный компонент тултипа.\n   */\n  tooltip: React.ReactNode | null;\n};\n\nexport const useTooltip = ({\n  // UseFloatingMiddlewaresBootstrapOptions\n  placement: placementProp = 'bottom',\n  arrowPadding = 10,\n  arrowHeight = 8,\n  offsetByMainAxis = 8,\n  offsetByCrossAxis = 0,\n  hideWhenReferenceHidden,\n  disableFlipMiddleware = false,\n  disableTriggerOnFocus = false,\n  onReferenceHiddenChange,\n\n  // useFloatingWithInteractions\n  defaultShown,\n  shown: shownProp,\n  onShownChange,\n  hoverDelay = 150,\n  strategy,\n\n  // инверсированные св-ва для useFloatingWithInteractions\n  enableInteractive = false,\n  disableArrow = false,\n  disableCloseAfterClick = false,\n\n  // AppRootProps\n  usePortal,\n\n  // TooltipBaseProps\n  id: idProp,\n  getRootRef,\n  appearance = 'neutral',\n  style: styleProp,\n  className,\n  zIndex = 'var(--vkui--z_index_popout)',\n  closable,\n  onPlacementChange,\n  ...popperProps\n}: UseTooltipProps): UseTooltipResult => {\n  const generatedId = React.useId();\n  const tooltipId = idProp || generatedId;\n\n  const renderFloatingComponent = useCallback(\n    ({\n      shown,\n      floatingProps,\n      floatingRef,\n      placement: resultPlacement,\n      middlewareData,\n      setArrowRef,\n      willBeHide,\n      onClose,\n    }: FloatingComponentProps<HTMLDivElement>) => {\n      if (!shown) {\n        return null;\n      }\n      return (\n        <AppRootPortal usePortal={usePortal}>\n          <TooltipBase\n            {...popperProps}\n            {...floatingProps}\n            style={{\n              ...floatingProps.style,\n              zIndex,\n              ...styleProp,\n            }}\n            id={tooltipId}\n            getRootRef={floatingRef}\n            appearance={appearance}\n            arrowProps={\n              disableArrow\n                ? undefined\n                : {\n                    placement: resultPlacement,\n                    coords: getArrowCoordsByMiddlewareData(middlewareData),\n                    getRootRef: setArrowRef,\n                  }\n            }\n            className={classNames(\n              willBeHide ? animationFadeClassNames.out : animationFadeClassNames.in,\n              className,\n            )}\n            onCloseIconClick={closable ? onClose : undefined}\n          />\n        </AppRootPortal>\n      );\n    },\n    [\n      appearance,\n      className,\n      closable,\n      disableArrow,\n      popperProps,\n      styleProp,\n      tooltipId,\n      usePortal,\n      zIndex,\n    ],\n  );\n\n  const remapReferenceProps: Exclude<UseFloatingElementProps['remapReferenceProps'], undefined> =\n    useCallback(\n      ({ shown, ...referenceProps }) => ({\n        ...referenceProps,\n        ...(shown && { 'aria-describedby': tooltipId }),\n      }),\n      [tooltipId],\n    );\n\n  const { component, anchorRef, anchorProps } = useFloatingElement({\n    placement: placementProp,\n    arrow: !disableArrow,\n    arrowHeight,\n    arrowPadding,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    hideWhenReferenceHidden,\n    disableFlipMiddleware,\n\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    trigger: disableTriggerOnFocus ? 'hover' : ['hover', 'focus'],\n    onReferenceHiddenChange,\n    hoverDelay,\n    closeAfterClick: !disableCloseAfterClick,\n    disableInteractive: !enableInteractive,\n    strategy,\n\n    onPlacementChange,\n\n    renderFloatingComponent,\n    externalFloatingElementRef: getRootRef,\n    remapReferenceProps,\n  });\n\n  return {\n    anchorRef,\n    anchorProps,\n    tooltip: component,\n  };\n};\n"],"names":["React","useCallback","classNames","useFloatingElement","animationFadeClassNames","getArrowCoordsByMiddlewareData","AppRootPortal","TooltipBase","useTooltip","placement","placementProp","arrowPadding","arrowHeight","offsetByMainAxis","offsetByCrossAxis","hideWhenReferenceHidden","disableFlipMiddleware","disableTriggerOnFocus","onReferenceHiddenChange","defaultShown","shown","shownProp","onShownChange","hoverDelay","strategy","enableInteractive","disableArrow","disableCloseAfterClick","usePortal","id","idProp","getRootRef","appearance","style","styleProp","className","zIndex","closable","onPlacementChange","popperProps","generatedId","useId","tooltipId","renderFloatingComponent","floatingProps","floatingRef","resultPlacement","middlewareData","setArrowRef","willBeHide","onClose","arrowProps","undefined","coords","out","in","onCloseIconClick","remapReferenceProps","referenceProps","component","anchorRef","anchorProps","arrow","trigger","closeAfterClick","disableInteractive","externalFloatingElementRef","tooltip"],"mappings":"AAAA;;AAEA,YAAYA,WAAW,QAAQ;AAC/B,SAAmBC,WAAW,QAAQ,QAAQ;AAC9C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAEEC,kBAAkB,QAEb,oCAAiC;AACxC,SAASC,uBAAuB,QAAQ,+BAAsB;AAC9D,SAASC,8BAA8B,QAAQ,8BAAqB;AAEpE,SAASC,aAAa,QAAQ,8BAA2B;AACzD,SAASC,WAAW,QAAQ,gCAA6B;AAsBzD,OAAO,MAAMC,aAAa,CAAC,EACzB,yCAAyC;AACzCC,WAAWC,gBAAgB,QAAQ,EACnCC,eAAe,EAAE,EACjBC,cAAc,CAAC,EACfC,mBAAmB,CAAC,EACpBC,oBAAoB,CAAC,EACrBC,uBAAuB,EACvBC,wBAAwB,KAAK,EAC7BC,wBAAwB,KAAK,EAC7BC,uBAAuB,EAEvB,8BAA8B;AAC9BC,YAAY,EACZC,OAAOC,SAAS,EAChBC,aAAa,EACbC,aAAa,GAAG,EAChBC,QAAQ,EAER,wDAAwD;AACxDC,oBAAoB,KAAK,EACzBC,eAAe,KAAK,EACpBC,yBAAyB,KAAK,EAE9B,eAAe;AACfC,SAAS,EAET,mBAAmB;AACnBC,IAAIC,MAAM,EACVC,UAAU,EACVC,aAAa,SAAS,EACtBC,OAAOC,SAAS,EAChBC,SAAS,EACTC,SAAS,6BAA6B,EACtCC,QAAQ,EACRC,iBAAiB,EACjB,GAAGC,aACa;IAChB,MAAMC,cAAcxC,MAAMyC,KAAK;IAC/B,MAAMC,YAAYZ,UAAUU;IAE5B,MAAMG,0BAA0B1C,YAC9B,CAAC,EACCmB,KAAK,EACLwB,aAAa,EACbC,WAAW,EACXpC,WAAWqC,eAAe,EAC1BC,cAAc,EACdC,WAAW,EACXC,UAAU,EACVC,OAAO,EACgC;QACvC,IAAI,CAAC9B,OAAO;YACV,OAAO;QACT;QACA,qBACE,KAACd;YAAcsB,WAAWA;sBACxB,cAAA,KAACrB;gBACE,GAAGgC,WAAW;gBACd,GAAGK,aAAa;gBACjBX,OAAO;oBACL,GAAGW,cAAcX,KAAK;oBACtBG;oBACA,GAAGF,SAAS;gBACd;gBACAL,IAAIa;gBACJX,YAAYc;gBACZb,YAAYA;gBACZmB,YACEzB,eACI0B,YACA;oBACE3C,WAAWqC;oBACXO,QAAQhD,+BAA+B0C;oBACvChB,YAAYiB;gBACd;gBAENb,WAAWjC,WACT+C,aAAa7C,wBAAwBkD,GAAG,GAAGlD,wBAAwBmD,EAAE,EACrEpB;gBAEFqB,kBAAkBnB,WAAWa,UAAUE;;;IAI/C,GACA;QACEpB;QACAG;QACAE;QACAX;QACAa;QACAL;QACAQ;QACAd;QACAQ;KACD;IAGH,MAAMqB,sBACJxD,YACE,CAAC,EAAEmB,KAAK,EAAE,GAAGsC,gBAAgB,GAAM,CAAA;YACjC,GAAGA,cAAc;YACjB,GAAItC,SAAS;gBAAE,oBAAoBsB;YAAU,CAAC;QAChD,CAAA,GACA;QAACA;KAAU;IAGf,MAAM,EAAEiB,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAE,GAAG1D,mBAAmB;QAC/DM,WAAWC;QACXoD,OAAO,CAACpC;QACRd;QACAD;QACAE;QACAC;QACAC;QACAC;QAEAG;QACAC,OAAOC;QACPC;QACAyC,SAAS9C,wBAAwB,UAAU;YAAC;YAAS;SAAQ;QAC7DC;QACAK;QACAyC,iBAAiB,CAACrC;QAClBsC,oBAAoB,CAACxC;QACrBD;QAEAc;QAEAK;QACAuB,4BAA4BnC;QAC5B0B;IACF;IAEA,OAAO;QACLG;QACAC;QACAM,SAASR;IACX;AACF,EAAE"}