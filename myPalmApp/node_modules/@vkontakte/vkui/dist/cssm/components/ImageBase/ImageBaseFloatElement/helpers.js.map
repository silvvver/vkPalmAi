{"version":3,"sources":["../../../../../src/components/ImageBase/ImageBaseFloatElement/helpers.ts"],"sourcesContent":["import { type FloatElementIndentation } from './ImageBaseFloatElement';\n\nfunction isIndentSizeConstant(indent: FloatElementIndentation) {\n  return (\n    indent === '2xs' ||\n    indent === 'xs' ||\n    indent === 's' ||\n    indent === 'm' ||\n    indent === 'l' ||\n    indent === 'xl' ||\n    indent === '2xl' ||\n    indent === '3xl' ||\n    indent === '4xl'\n  );\n}\n\nfunction calculateIndent(indent: FloatElementIndentation) {\n  if (isIndentSizeConstant(indent)) {\n    return;\n  }\n  return typeof indent === 'string' ? indent : `${indent}px`;\n}\n\nexport const resolveIndent = (\n  indent: FloatElementIndentation | undefined,\n  cssProperty: string,\n  classNames: Record<string, string>,\n): [React.CSSProperties | undefined, string | undefined] => {\n  if (!indent) {\n    return [undefined, undefined];\n  }\n\n  const calculatedIndent = calculateIndent(indent);\n\n  if (calculatedIndent) {\n    return [{ [cssProperty]: calculatedIndent }, undefined];\n  }\n\n  return [undefined, classNames[indent]];\n};\n\nexport const mutableRemoveElement = <T>(arr: T[], element: T) => {\n  arr.splice(arr.indexOf(element), 1);\n};\n"],"names":["isIndentSizeConstant","indent","calculateIndent","resolveIndent","cssProperty","classNames","undefined","calculatedIndent","mutableRemoveElement","arr","element","splice","indexOf"],"mappings":"AAEA,SAASA,qBAAqBC,MAA+B;IAC3D,OACEA,WAAW,SACXA,WAAW,QACXA,WAAW,OACXA,WAAW,OACXA,WAAW,OACXA,WAAW,QACXA,WAAW,SACXA,WAAW,SACXA,WAAW;AAEf;AAEA,SAASC,gBAAgBD,MAA+B;IACtD,IAAID,qBAAqBC,SAAS;QAChC;IACF;IACA,OAAO,OAAOA,WAAW,WAAWA,SAAS,GAAGA,OAAO,EAAE,CAAC;AAC5D;AAEA,OAAO,MAAME,gBAAgB,CAC3BF,QACAG,aACAC;IAEA,IAAI,CAACJ,QAAQ;QACX,OAAO;YAACK;YAAWA;SAAU;IAC/B;IAEA,MAAMC,mBAAmBL,gBAAgBD;IAEzC,IAAIM,kBAAkB;QACpB,OAAO;YAAC;gBAAE,CAACH,YAAY,EAAEG;YAAiB;YAAGD;SAAU;IACzD;IAEA,OAAO;QAACA;QAAWD,UAAU,CAACJ,OAAO;KAAC;AACxC,EAAE;AAEF,OAAO,MAAMO,uBAAuB,CAAIC,KAAUC;IAChDD,IAAIE,MAAM,CAACF,IAAIG,OAAO,CAACF,UAAU;AACnC,EAAE"}