{"version":3,"sources":["../../../../../src/components/Typography/EllipsisText/EllipsisText.tsx"],"sourcesContent":["'use client';\n\nimport { useRef } from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { getTextFromChildren } from '../../../lib/children';\nimport { useIsomorphicLayoutEffect } from '../../../lib/useIsomorphicLayoutEffect';\nimport type { HasRootRef } from '../../../types';\nimport { RootComponent, type RootComponentProps } from '../../RootComponent/RootComponent';\nimport styles from './EllipsisText.module.css';\n\nexport interface EllipsisTextProps\n  extends Omit<RootComponentProps<HTMLElement>, 'title'>,\n    HasRootRef<HTMLElement> {\n  /**\n   * Пользовательская маскимальная ширина.\n   *\n   * Используйте в случаях, когда у контейнера ширина зависит от размера контента,\n   * другими словами, когда ширина не ограничена.\n   */\n  maxWidth?: number;\n  /**\n   * Максимальное количество видимых строк.\n   *\n   * > При `maxLines > 1` используется свойство line-clamp, которое поддерживается не всеми версиями браузеров. Используйте с осторожностью\n   * > @see [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp).\n   */\n  maxLines?: number;\n  /**\n   * Отключает отображение нативного тултипа с полным текстом.\n   */\n  disableNativeTitle?: boolean;\n}\n\n/** Компонент ограничивает текстовый контент, убирая его в многоточие.\n *\n * @since 6.1.0\n * @see https://vkcom.github.io/VKUI/#/EllipsisText\n */\nconst EllipsisText = ({\n  Component = 'span',\n  className,\n  children,\n  maxWidth,\n  maxLines = 1,\n  disableNativeTitle = false,\n  ...restProps\n}: EllipsisTextProps): React.ReactNode => {\n  const contentRef = useRef<HTMLSpanElement | null>(null);\n\n  useIsomorphicLayoutEffect(() => {\n    if (contentRef && contentRef.current) {\n      contentRef.current.style.setProperty('-webkit-line-clamp', maxLines > 1 ? `${maxLines}` : '');\n    }\n  }, [contentRef, maxLines]);\n\n  return (\n    <RootComponent\n      Component={Component}\n      className={classNames(\n        styles.host,\n        disableNativeTitle && styles.disableNativeTitle,\n        className,\n      )}\n      title={disableNativeTitle ? undefined : getTextFromChildren(children)}\n      {...restProps}\n    >\n      <span\n        style={{ maxWidth }}\n        ref={contentRef}\n        className={classNames(styles.content, maxLines > 1 && styles.contentMultiline)}\n      >\n        {children}\n      </span>\n    </RootComponent>\n  );\n};\n\nexport { EllipsisText };\n"],"names":["useRef","classNames","getTextFromChildren","useIsomorphicLayoutEffect","RootComponent","styles","EllipsisText","Component","className","children","maxWidth","maxLines","disableNativeTitle","restProps","contentRef","current","style","setProperty","host","title","undefined","span","ref","content","contentMultiline"],"mappings":"AAAA;;AAEA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,mBAAmB,QAAQ,2BAAwB;AAC5D,SAASC,yBAAyB,QAAQ,4CAAyC;AAEnF,SAASC,aAAa,QAAiC,uCAAoC;AAC3F,OAAOC,YAAY,4BAA4B;AAyB/C;;;;CAIC,GACD,MAAMC,eAAe,CAAC,EACpBC,YAAY,MAAM,EAClBC,SAAS,EACTC,QAAQ,EACRC,QAAQ,EACRC,WAAW,CAAC,EACZC,qBAAqB,KAAK,EAC1B,GAAGC,WACe;IAClB,MAAMC,aAAad,OAA+B;IAElDG,0BAA0B;QACxB,IAAIW,cAAcA,WAAWC,OAAO,EAAE;YACpCD,WAAWC,OAAO,CAACC,KAAK,CAACC,WAAW,CAAC,sBAAsBN,WAAW,IAAI,GAAGA,UAAU,GAAG;QAC5F;IACF,GAAG;QAACG;QAAYH;KAAS;IAEzB,qBACE,KAACP;QACCG,WAAWA;QACXC,WAAWP,WACTI,OAAOa,IAAI,EACXN,sBAAsBP,OAAOO,kBAAkB,EAC/CJ;QAEFW,OAAOP,qBAAqBQ,YAAYlB,oBAAoBO;QAC3D,GAAGI,SAAS;kBAEb,cAAA,KAACQ;YACCL,OAAO;gBAAEN;YAAS;YAClBY,KAAKR;YACLN,WAAWP,WAAWI,OAAOkB,OAAO,EAAEZ,WAAW,KAAKN,OAAOmB,gBAAgB;sBAE5Ef;;;AAIT;AAEA,SAASH,YAAY,GAAG"}