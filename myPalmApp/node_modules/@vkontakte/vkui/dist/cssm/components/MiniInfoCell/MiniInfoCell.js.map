{"version":3,"sources":["../../../../src/components/MiniInfoCell/MiniInfoCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Icon16Chevron } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport type { HTMLAttributesWithRootRef } from '../../types';\nimport { RootComponent } from '../RootComponent/RootComponent';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport styles from './MiniInfoCell.module.css';\n\nconst stylesMode = {\n  add: styles.modeAdd,\n  accent: styles.modeAccent,\n  more: styles.modeMore,\n};\n\nconst stylesTextWrap = {\n  nowrap: styles.textWrapNowrap,\n  full: styles.textWrapFull,\n  short: styles.textWrapShort,\n};\n\nexport interface MiniInfoCellProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Иконка слева.<br />\n   * Рекомендуется использовать иконки размера 20.\n   */\n  before?: React.ReactNode;\n\n  /**\n   * Содержимое справа.<br />\n   * `<UsersStack size=\"s\" />` или `<Avatar size={24} />`.\n   */\n  after?: React.ReactNode;\n\n  /**\n   * Тип ячейки:\n   *\n   * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />\n   * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.\n   * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.\n   * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.\n   */\n  mode?: 'base' | 'accent' | 'add' | 'more';\n\n  /**\n   * Тип отображения текста:\n   *\n   * - `nowrap` – в одну строку, текст не переносится и обрезается.\n   * - `short` – максимально отображается 3 строки, остальное обрезается.\n   * - `full` – текст отображается полностью. В дизайне это свойство `multiline`.\n   */\n  textWrap?: 'nowrap' | 'short' | 'full';\n\n  /**\n   * Передавать `true`, если предполагается переход при нажатии на ячейку.\n   */\n  chevron?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/MiniInfoCell\n */\nexport const MiniInfoCell = ({\n  before,\n  after,\n  children,\n  mode = 'base',\n  textWrap = 'nowrap',\n  chevron = false,\n  ...restProps\n}: MiniInfoCellProps): React.ReactNode => {\n  const cellClasses = classNames(\n    styles.host,\n    stylesTextWrap[textWrap],\n    mode !== 'base' && stylesMode[mode],\n  );\n\n  const cellContent = (\n    <React.Fragment>\n      {hasReactNode(before) && <span className={styles.before}>{before}</span>}\n      <div className={styles.middle}>\n        <Paragraph className={styles.content} weight={mode === 'more' ? '2' : undefined}>\n          {children}\n        </Paragraph>\n        {chevron && <Icon16Chevron />}\n      </div>\n      {hasReactNode(after) && <span className={styles.after}>{after}</span>}\n    </React.Fragment>\n  );\n\n  return restProps.onClick ? (\n    <Tappable Component=\"div\" role=\"button\" {...restProps} baseClassName={cellClasses}>\n      {cellContent}\n    </Tappable>\n  ) : (\n    <RootComponent {...restProps} baseClassName={cellClasses}>\n      {cellContent}\n    </RootComponent>\n  );\n};\n"],"names":["React","Icon16Chevron","classNames","hasReactNode","RootComponent","Tappable","Paragraph","styles","stylesMode","add","modeAdd","accent","modeAccent","more","modeMore","stylesTextWrap","nowrap","textWrapNowrap","full","textWrapFull","short","textWrapShort","MiniInfoCell","before","after","children","mode","textWrap","chevron","restProps","cellClasses","host","cellContent","Fragment","span","className","div","middle","content","weight","undefined","onClick","Component","role","baseClassName"],"mappings":";AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAE3D,SAASC,aAAa,QAAQ,oCAAiC;AAC/D,SAASC,QAAQ,QAAQ,0BAAuB;AAChD,SAASC,SAAS,QAAQ,uCAAoC;AAC9D,OAAOC,YAAY,4BAA4B;AAE/C,MAAMC,aAAa;IACjBC,KAAKF,OAAOG,OAAO;IACnBC,QAAQJ,OAAOK,UAAU;IACzBC,MAAMN,OAAOO,QAAQ;AACvB;AAEA,MAAMC,iBAAiB;IACrBC,QAAQT,OAAOU,cAAc;IAC7BC,MAAMX,OAAOY,YAAY;IACzBC,OAAOb,OAAOc,aAAa;AAC7B;AAwCA;;CAEC,GACD,OAAO,MAAMC,eAAe,CAAC,EAC3BC,MAAM,EACNC,KAAK,EACLC,QAAQ,EACRC,OAAO,MAAM,EACbC,WAAW,QAAQ,EACnBC,UAAU,KAAK,EACf,GAAGC,WACe;IAClB,MAAMC,cAAc5B,WAClBK,OAAOwB,IAAI,EACXhB,cAAc,CAACY,SAAS,EACxBD,SAAS,UAAUlB,UAAU,CAACkB,KAAK;IAGrC,MAAMM,4BACJ,MAAChC,MAAMiC,QAAQ;;YACZ9B,aAAaoB,yBAAW,KAACW;gBAAKC,WAAW5B,OAAOgB,MAAM;0BAAGA;;0BAC1D,MAACa;gBAAID,WAAW5B,OAAO8B,MAAM;;kCAC3B,KAAC/B;wBAAU6B,WAAW5B,OAAO+B,OAAO;wBAAEC,QAAQb,SAAS,SAAS,MAAMc;kCACnEf;;oBAEFG,yBAAW,KAAC3B;;;YAEdE,aAAaqB,wBAAU,KAACU;gBAAKC,WAAW5B,OAAOiB,KAAK;0BAAGA;;;;IAI5D,OAAOK,UAAUY,OAAO,iBACtB,KAACpC;QAASqC,WAAU;QAAMC,MAAK;QAAU,GAAGd,SAAS;QAAEe,eAAed;kBACnEE;uBAGH,KAAC5B;QAAe,GAAGyB,SAAS;QAAEe,eAAed;kBAC1CE;;AAGP,EAAE"}