{"version":3,"sources":["../../../src/hooks/useAdaptivityConditionalRender/helpers.ts"],"sourcesContent":["import {\n  type SizeTypeValues,\n  tryToCheckIsDesktop,\n  type ViewHeightType,\n  ViewWidth,\n  type ViewWidthType,\n} from '../../lib/adaptivity';\nimport type { PlatformType } from '../../lib/platform';\nimport { forcedProps } from './constants';\nimport type {\n  AdaptiveDeviceType,\n  AdaptiveSizeType,\n  AdaptiveViewWidth,\n  DeviceTypeCSSBreakpoints,\n  ElementProps,\n  ViewWidthCSSBreakpoints,\n} from './types';\n\nexport const getAdaptiveSizeType = (\n  type: undefined | SizeTypeValues,\n  compactMediaQueryProps: ElementProps,\n  regularMediaQueryProps: ElementProps,\n): AdaptiveSizeType => {\n  return {\n    compact: type === undefined ? compactMediaQueryProps : type === 'compact' ? forcedProps : false,\n    regular: type === undefined ? regularMediaQueryProps : type === 'regular' ? forcedProps : false,\n  };\n};\n\nexport const getAdaptiveViewWidth = (\n  viewWidth: undefined | ViewWidthType,\n  viewWidthMapProps: Record<ViewWidthCSSBreakpoints, ElementProps>,\n): AdaptiveViewWidth => {\n  return {\n    tabletMinus:\n      viewWidth === undefined\n        ? viewWidthMapProps.tabletMinus\n        : viewWidth < ViewWidth.TABLET\n          ? forcedProps\n          : false,\n    tabletPlus:\n      viewWidth === undefined\n        ? viewWidthMapProps.tabletPlus\n        : viewWidth >= ViewWidth.TABLET\n          ? forcedProps\n          : false,\n  };\n};\n\nexport const getAdaptiveDeviceType = (\n  viewWidth: undefined | ViewWidthType,\n  viewHeight: undefined | ViewHeightType,\n  hasPointer: undefined | boolean,\n  platform: PlatformType,\n  deviceTypeMapProps: Record<DeviceTypeCSSBreakpoints, ElementProps>,\n): AdaptiveDeviceType => {\n  const isDesktop = tryToCheckIsDesktop(viewWidth, viewHeight, hasPointer, platform);\n\n  if (isDesktop === null) {\n    return {\n      mobile: deviceTypeMapProps.mobile,\n      desktop: deviceTypeMapProps.desktop,\n    };\n  }\n\n  if (isDesktop) {\n    return {\n      mobile: false,\n      desktop: forcedProps,\n    };\n  }\n\n  return {\n    mobile: forcedProps,\n    desktop: false,\n  };\n};\n"],"names":["tryToCheckIsDesktop","ViewWidth","forcedProps","getAdaptiveSizeType","type","compactMediaQueryProps","regularMediaQueryProps","compact","undefined","regular","getAdaptiveViewWidth","viewWidth","viewWidthMapProps","tabletMinus","TABLET","tabletPlus","getAdaptiveDeviceType","viewHeight","hasPointer","platform","deviceTypeMapProps","isDesktop","mobile","desktop"],"mappings":"AAAA,SAEEA,mBAAmB,EAEnBC,SAAS,QAEJ,gCAAuB;AAE9B,SAASC,WAAW,QAAQ,iBAAc;AAU1C,OAAO,MAAMC,sBAAsB,CACjCC,MACAC,wBACAC;IAEA,OAAO;QACLC,SAASH,SAASI,YAAYH,yBAAyBD,SAAS,YAAYF,cAAc;QAC1FO,SAASL,SAASI,YAAYF,yBAAyBF,SAAS,YAAYF,cAAc;IAC5F;AACF,EAAE;AAEF,OAAO,MAAMQ,uBAAuB,CAClCC,WACAC;IAEA,OAAO;QACLC,aACEF,cAAcH,YACVI,kBAAkBC,WAAW,GAC7BF,YAAYV,UAAUa,MAAM,GAC1BZ,cACA;QACRa,YACEJ,cAAcH,YACVI,kBAAkBG,UAAU,GAC5BJ,aAAaV,UAAUa,MAAM,GAC3BZ,cACA;IACV;AACF,EAAE;AAEF,OAAO,MAAMc,wBAAwB,CACnCL,WACAM,YACAC,YACAC,UACAC;IAEA,MAAMC,YAAYrB,oBAAoBW,WAAWM,YAAYC,YAAYC;IAEzE,IAAIE,cAAc,MAAM;QACtB,OAAO;YACLC,QAAQF,mBAAmBE,MAAM;YACjCC,SAASH,mBAAmBG,OAAO;QACrC;IACF;IAEA,IAAIF,WAAW;QACb,OAAO;YACLC,QAAQ;YACRC,SAASrB;QACX;IACF;IAEA,OAAO;QACLoB,QAAQpB;QACRqB,SAAS;IACX;AACF,EAAE"}