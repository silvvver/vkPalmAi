{"version":3,"sources":["../../src/hooks/useFloatingElement.tsx"],"sourcesContent":["import * as React from 'react';\nimport { type Ref, useMemo } from 'react';\nimport {\n  type OnPlacementChange,\n  useFloatingMiddlewaresBootstrap,\n  type UseFloatingMiddlewaresBootstrapOptions,\n  useFloatingWithInteractions,\n  type UseFloatingWithInteractionsProps,\n  type UseFloatingWithInteractionsReturn,\n  usePlacementChangeCallback,\n} from '../lib/floating';\nimport { type ReferenceProps } from '../lib/floating/useFloatingWithInteractions/types';\nimport { useReferenceHiddenChangeCallback } from '../lib/floating/useReferenceHiddenChangeCallback';\nimport { useExternRef } from './useExternRef';\nimport { useGlobalEscKeyDown } from './useGlobalEscKeyDown';\n\nexport type FloatingComponentProps<FloatingElement extends HTMLElement = HTMLElement> = Pick<\n  UseFloatingWithInteractionsReturn,\n  | 'shown'\n  | 'willBeHide'\n  | 'floatingProps'\n  | 'middlewareData'\n  | 'onClose'\n  | 'onRestoreFocus'\n  | 'placement'\n> & {\n  floatingRef: React.Ref<FloatingElement>;\n  setArrowRef: React.Dispatch<React.SetStateAction<HTMLDivElement | null>>;\n};\n\nexport type RenderFloatingComponentFn<FloatingElement extends HTMLElement = HTMLElement> = (\n  props: FloatingComponentProps<FloatingElement>,\n) => React.ReactNode | null;\n\nexport type RemapReferencePropsFn<ReferenceElement extends HTMLElement = HTMLElement> = (\n  props: ReferenceProps<ReferenceElement> & { shown: boolean },\n) => ReferenceProps<ReferenceElement>;\n\nexport type UseFloatingElementProps<\n  FloatingElement extends HTMLElement = HTMLElement,\n  ReferenceElement extends HTMLElement = HTMLElement,\n> = Omit<UseFloatingMiddlewaresBootstrapOptions, 'arrowRef'> &\n  Omit<UseFloatingWithInteractionsProps, 'placement'> & {\n    onPlacementChange?: OnPlacementChange;\n    onReferenceHiddenChange?: (hidden: boolean) => void;\n    renderFloatingComponent: RenderFloatingComponentFn<FloatingElement>;\n    remapReferenceProps?: RemapReferencePropsFn<ReferenceElement>;\n    externalFloatingElementRef?: React.Ref<FloatingElement>;\n  };\n\nexport type UseFloatingResult<ReferenceElement extends HTMLElement = HTMLElement> = {\n  anchorRef: Ref<ReferenceElement>;\n  anchorProps: ReferenceProps<ReferenceElement>;\n  component: React.ReactNode | null;\n};\n\nexport const useFloatingElement = <\n  ReferenceElement extends HTMLElement = HTMLElement,\n  FloatingElement extends HTMLElement = HTMLElement,\n>({\n  // useFloatingMiddlewaresBootstrap\n  placement = 'bottom-start',\n  arrow,\n  arrowHeight,\n  arrowPadding,\n  sameWidth,\n  offsetByMainAxis = 0,\n  offsetByCrossAxis = 0,\n  customMiddlewares,\n  hideWhenReferenceHidden,\n  disableFlipMiddleware = false,\n\n  // useFloatingWithInteractions\n  trigger,\n  hoverDelay,\n  closeAfterClick,\n  disabled,\n  disableInteractive,\n  disableCloseOnClickOutside,\n  disableCloseOnEscKey,\n  defaultShown,\n  shown: shownProp,\n  onShownChange,\n  onShownChanged,\n  strategy,\n  onReferenceHiddenChange,\n\n  onPlacementChange,\n\n  renderFloatingComponent,\n  externalFloatingElementRef,\n  remapReferenceProps,\n}: UseFloatingElementProps<\n  FloatingElement,\n  ReferenceElement\n>): UseFloatingResult<ReferenceElement> => {\n  const [arrowRef, setArrowRef] = React.useState<HTMLDivElement | null>(null);\n\n  const { middlewares, strictPlacement } = useFloatingMiddlewaresBootstrap({\n    placement,\n    offsetByMainAxis,\n    offsetByCrossAxis,\n    customMiddlewares,\n    hideWhenReferenceHidden,\n    sameWidth,\n    arrow,\n    arrowRef,\n    arrowPadding,\n    arrowHeight,\n    disableFlipMiddleware,\n  });\n\n  const {\n    placement: resolvedPlacement,\n    shown,\n    willBeHide,\n    refs,\n    referenceProps,\n    floatingProps,\n    middlewareData,\n    onClose,\n    onRestoreFocus,\n    onEscapeKeyDown,\n  } = useFloatingWithInteractions({\n    middlewares,\n    strategy,\n    placement: strictPlacement,\n    trigger,\n    hoverDelay,\n    closeAfterClick,\n    disabled,\n    disableInteractive,\n    disableCloseOnClickOutside,\n    disableCloseOnEscKey,\n    defaultShown,\n    shown: shownProp,\n    onShownChange,\n    onShownChanged,\n  });\n\n  const resultRef = useExternRef<FloatingElement>(externalFloatingElementRef, refs.setFloating);\n\n  usePlacementChangeCallback(placement, resolvedPlacement, onPlacementChange);\n\n  useReferenceHiddenChangeCallback(middlewareData.hide, onReferenceHiddenChange);\n\n  const component = renderFloatingComponent({\n    shown,\n    willBeHide,\n    floatingProps,\n    floatingRef: resultRef,\n    middlewareData,\n    placement: resolvedPlacement,\n    onClose,\n    onRestoreFocus,\n    setArrowRef,\n  });\n\n  useGlobalEscKeyDown(shown, onEscapeKeyDown);\n\n  const remappedReferenceProps = useMemo(\n    () =>\n      remapReferenceProps ? remapReferenceProps({ ...referenceProps, shown }) : referenceProps,\n    [remapReferenceProps, shown, referenceProps],\n  );\n\n  return {\n    anchorRef: refs.setReference,\n    anchorProps: remappedReferenceProps,\n    component,\n  };\n};\n"],"names":["React","useMemo","useFloatingMiddlewaresBootstrap","useFloatingWithInteractions","usePlacementChangeCallback","useReferenceHiddenChangeCallback","useExternRef","useGlobalEscKeyDown","useFloatingElement","placement","arrow","arrowHeight","arrowPadding","sameWidth","offsetByMainAxis","offsetByCrossAxis","customMiddlewares","hideWhenReferenceHidden","disableFlipMiddleware","trigger","hoverDelay","closeAfterClick","disabled","disableInteractive","disableCloseOnClickOutside","disableCloseOnEscKey","defaultShown","shown","shownProp","onShownChange","onShownChanged","strategy","onReferenceHiddenChange","onPlacementChange","renderFloatingComponent","externalFloatingElementRef","remapReferenceProps","arrowRef","setArrowRef","useState","middlewares","strictPlacement","resolvedPlacement","willBeHide","refs","referenceProps","floatingProps","middlewareData","onClose","onRestoreFocus","onEscapeKeyDown","resultRef","setFloating","hide","component","floatingRef","remappedReferenceProps","anchorRef","setReference","anchorProps"],"mappings":";;AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAAmBC,OAAO,QAAQ,QAAQ;AAC1C,SAEEC,+BAA+B,EAE/BC,2BAA2B,EAG3BC,0BAA0B,QACrB,2BAAkB;AAEzB,SAASC,gCAAgC,QAAQ,sDAAmD;AACpG,SAASC,YAAY,QAAQ,oBAAiB;AAC9C,SAASC,mBAAmB,QAAQ,2BAAwB;AA0C5D,OAAO,MAAMC,qBAAqB,CAGhC,EACA,kCAAkC;AAClCC,YAAY,cAAc,EAC1BC,KAAK,EACLC,WAAW,EACXC,YAAY,EACZC,SAAS,EACTC,mBAAmB,CAAC,EACpBC,oBAAoB,CAAC,EACrBC,iBAAiB,EACjBC,uBAAuB,EACvBC,wBAAwB,KAAK,EAE7B,8BAA8B;AAC9BC,OAAO,EACPC,UAAU,EACVC,eAAe,EACfC,QAAQ,EACRC,kBAAkB,EAClBC,0BAA0B,EAC1BC,oBAAoB,EACpBC,YAAY,EACZC,OAAOC,SAAS,EAChBC,aAAa,EACbC,cAAc,EACdC,QAAQ,EACRC,uBAAuB,EAEvBC,iBAAiB,EAEjBC,uBAAuB,EACvBC,0BAA0B,EAC1BC,mBAAmB,EAIpB;IACC,MAAM,CAACC,UAAUC,YAAY,GAAGtC,MAAMuC,QAAQ,CAAwB;IAEtE,MAAM,EAAEC,WAAW,EAAEC,eAAe,EAAE,GAAGvC,gCAAgC;QACvEO;QACAK;QACAC;QACAC;QACAC;QACAJ;QACAH;QACA2B;QACAzB;QACAD;QACAO;IACF;IAEA,MAAM,EACJT,WAAWiC,iBAAiB,EAC5Bf,KAAK,EACLgB,UAAU,EACVC,IAAI,EACJC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,OAAO,EACPC,cAAc,EACdC,eAAe,EAChB,GAAG/C,4BAA4B;QAC9BqC;QACAT;QACAtB,WAAWgC;QACXtB;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC,OAAOC;QACPC;QACAC;IACF;IAEA,MAAMqB,YAAY7C,aAA8B6B,4BAA4BS,KAAKQ,WAAW;IAE5FhD,2BAA2BK,WAAWiC,mBAAmBT;IAEzD5B,iCAAiC0C,eAAeM,IAAI,EAAErB;IAEtD,MAAMsB,YAAYpB,wBAAwB;QACxCP;QACAgB;QACAG;QACAS,aAAaJ;QACbJ;QACAtC,WAAWiC;QACXM;QACAC;QACAX;IACF;IAEA/B,oBAAoBoB,OAAOuB;IAE3B,MAAMM,yBAAyBvD,QAC7B,IACEmC,sBAAsBA,oBAAoB,wCAAKS;YAAgBlB;cAAWkB,gBAC5E;QAACT;QAAqBT;QAAOkB;KAAe;IAG9C,OAAO;QACLY,WAAWb,KAAKc,YAAY;QAC5BC,aAAaH;QACbF;IACF;AACF,EAAE"}