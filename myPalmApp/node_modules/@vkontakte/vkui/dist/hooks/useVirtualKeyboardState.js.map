{"version":3,"sources":["../../src/hooks/useVirtualKeyboardState.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { debounce, throttle } from '@vkontakte/vkjs';\nimport {\n  getVisualViewport,\n  isHTMLContentEditableElement,\n  useDOM,\n  type VisualViewport,\n} from '../lib/dom';\n\nexport type VirtualKeyboardState = { opened: boolean };\n\n/**\n * > см. [Неудобно работать с клавиатурой в ModalPage на iOS #3792](https://github.com/VKCOM/VKUI/discussions/3792)\n *\n * Для реализации модальных окон для тач-устройств, мы вынуждены отслеживать открытие виртуальной\n * клавиатуры. По состоянию `opened` компоненты должны временно блокировать дальнейшее взаимодействие\n * с ними. Например, отключить закрытие по свайпу, чтобы не мешать пользователю работать с полями\n * ввода.\n *\n * Помимо этого в **Safari** и в **Chrome Android** нам нужно отслеживать прокрутку области видимости\n * пользователем, т.к. в упомянутых браузерах, виртуальная клавиатура поднимает контент вверх\n * не изменяя её высоту. Из-за этого появляется возможность прокручивать `window`, что визуально\n * выглядит плохо. В хуке мы ловим фокус на поле ввода и далее, если это тач-устройство, то\n * отлавливаем события прокрутки на `window`, чтобы сохранять текущую её позицию через `scrollTo(x, y)`.\n *\n * **Troubleshooting**\n *\n * - в **Safari** и в **Chrome Android** шапка будет выдвигаться вверх – хаки с выставлением `offsetTop`\n *   из `VisualViewport` порождают reflow/repaint и прыгания контента;\n * - в **Safari** изменение высоты виртуальной клавиатуры, например, на выбор эмодзи, не поднимет\n *   `VisualViewport` из-за чего клавиатура может частично перекрыть элементы интерфейса.\n *\n * **Полезные ссылки**\n *\n * - [The Eccentric Ways of iOS Safari with the Keyboard](https://web.archive.org/web/20240920081850/https://blog.opendigerati.com/the-eccentric-ways-of-ios-safari-with-the-keyboard-b5aa3f34228d?gi=5411141a13e0)\n * - [Dealing with the visual viewport](https://web.archive.org/web/20240920082109/https://rdavis.io/articles/dealing-with-the-visual-viewport)\n * - [How to get the document height in iOS Safari when the on-screen keyboard is open](https://web.archive.org/web/20240920082743/https://martijnhols.nl/gists/how-to-get-document-height-ios-safari-osk)\n */\nexport function useVirtualKeyboardState(enabled = true): VirtualKeyboardState {\n  const { window, document } = useDOM();\n\n  const [focusedEl, setFocusedEl] = useState<Element | null>(null);\n  const [keyboardOpened, setKeyboardOpened] = useState(false);\n\n  const prevVisualViewportRef = useRef<VisualViewport | null>(null);\n\n  useEffect(\n    function handleFocusedEl() {\n      if (!enabled || !window || !document) {\n        return;\n      }\n\n      const handleFocus = (event: FocusEvent | true) => {\n        const activeElement = event === true ? document.activeElement : (event.target as Element);\n\n        if (isHTMLContentEditableElement(activeElement)) {\n          const patchedEvent = event === true ? { type: 'focusin' } : event;\n          switch (patchedEvent.type) {\n            case 'focusin':\n              prevVisualViewportRef.current = getVisualViewport(window);\n              setFocusedEl(activeElement);\n              break;\n            case 'focusout':\n              prevVisualViewportRef.current = null;\n              setKeyboardOpened(false);\n              setFocusedEl(null);\n              break;\n          }\n        }\n      };\n\n      /**\n       * У полей с autoFocus не отлавливаются события `focus`, для этого вызываем обработчик\n       * вручную, чтобы иметь хоть какое-то понимание происходящего.\n       */\n      handleFocus(true);\n\n      const eventOptions = { passive: true, capture: false };\n      document.addEventListener('focusin', handleFocus, eventOptions);\n      document.addEventListener('focusout', handleFocus, eventOptions);\n\n      return () => {\n        prevVisualViewportRef.current = null;\n        document.removeEventListener('focusin', handleFocus, eventOptions);\n        document.removeEventListener('focusout', handleFocus, eventOptions);\n      };\n    },\n    [enabled, window, document],\n  );\n\n  useEffect(\n    function handleVirtualKeyboardOpened() {\n      if (!focusedEl || !window) {\n        return;\n      }\n\n      const handleResize = debounce(() => {\n        /* istanbul ignore if: нереалистичный кейс, проверяем в угоду TypeScript */\n        if (prevVisualViewportRef.current === null) {\n          return;\n        }\n\n        const nextVisualViewport = getVisualViewport(window);\n\n        const { offsetTop: prevOffsetTop, height: prevHeight } = prevVisualViewportRef.current;\n        const { offsetTop: nextOffsetTop, height: nextHeight } = nextVisualViewport;\n        if (prevOffsetTop !== nextOffsetTop || prevHeight !== nextHeight) {\n          setKeyboardOpened(true);\n          prevVisualViewportRef.current = nextVisualViewport;\n        }\n      }, 100);\n\n      if (window.visualViewport) {\n        window.visualViewport.addEventListener('resize', handleResize);\n      } else {\n        window.addEventListener('resize', handleResize);\n      }\n\n      return function dispose() {\n        if (window.visualViewport) {\n          window.visualViewport.removeEventListener('resize', handleResize);\n        } else {\n          window.removeEventListener('resize', handleResize);\n        }\n      };\n    },\n    [focusedEl, window],\n  );\n\n  useEffect(\n    function preventWindowScrollIfKeyboardOpened() {\n      if (!keyboardOpened || !window) {\n        return;\n      }\n\n      const prevent = throttle(() => {\n        if (prevVisualViewportRef.current) {\n          window.scrollTo(0, prevVisualViewportRef.current.offsetTop);\n        }\n      }, 100);\n\n      window.addEventListener('scroll', prevent, { passive: true });\n\n      return function dispose() {\n        window.removeEventListener('scroll', prevent);\n      };\n    },\n    [keyboardOpened, window],\n  );\n\n  return { opened: keyboardOpened };\n}\n"],"names":["useEffect","useRef","useState","debounce","throttle","getVisualViewport","isHTMLContentEditableElement","useDOM","useVirtualKeyboardState","enabled","window","document","focusedEl","setFocusedEl","keyboardOpened","setKeyboardOpened","prevVisualViewportRef","handleFocusedEl","handleFocus","event","activeElement","target","patchedEvent","type","current","eventOptions","passive","capture","addEventListener","removeEventListener","handleVirtualKeyboardOpened","handleResize","nextVisualViewport","offsetTop","prevOffsetTop","height","prevHeight","nextOffsetTop","nextHeight","visualViewport","dispose","preventWindowScrollIfKeyboardOpened","prevent","scrollTo","opened"],"mappings":"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"}