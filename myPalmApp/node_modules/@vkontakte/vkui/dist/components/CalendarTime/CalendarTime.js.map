{"version":3,"sources":["../../../src/components/CalendarTime/CalendarTime.tsx"],"sourcesContent":["'use client';\n\nimport { type ChangeEvent, useRef } from 'react';\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport { setHours, setMinutes } from 'date-fns';\nimport { Keys, pressedKey } from '../../lib/accessibility';\nimport { callMultiple } from '../../lib/callMultiple';\nimport { AdaptivityProvider } from '../AdaptivityProvider/AdaptivityProvider';\nimport { Button, type ButtonProps } from '../Button/Button';\nimport { CustomSelect, type SelectProps } from '../CustomSelect/CustomSelect';\nimport styles from './CalendarTime.module.css';\n\nconst selectFilterFn = () => true;\n\nexport type CalendarTimeTestsProps = {\n  /**\n   * Передает атрибут `data-testid` для дропдауна выбора часа в календаре.\n   */\n  hoursTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для дропдауна выбора минут в календаре.\n   */\n  minutesTestId?: string;\n  /**\n   * Передает атрибут `data-testid` для кнопки \"Готово\" в календаре.\n   */\n  doneButtonTestId?: string;\n};\n\nexport type CalendarDoneButtonProps = {\n  /**\n   * Кастомное отображение кнопки `\"Done\"`.\n   */\n  DoneButton?: React.ComponentType<ButtonProps>;\n  /**\n   * Текст отображаемый в кнопке `\"Done\"`.\n   */\n  doneButtonText?: string;\n  /**\n   * Управление отображением кнопки `\"Done\"`.\n   */\n  doneButtonShow?: boolean;\n  /**\n   * Блокировка взаимодействия с кнопкой \"Done\".\n   */\n  doneButtonDisabled?: boolean;\n  /**\n   * Обработки нажатия на кнопку `\"Done\"`.\n   */\n  onDoneButtonClick?: () => void;\n};\n\nexport interface CalendarTimeProps extends CalendarTimeTestsProps, CalendarDoneButtonProps {\n  /**\n   * Отображаемая дата.\n   */\n  value: Date;\n  /**\n   * Текст выпадающего списка с выбором часов. Делает его доступным для ассистивных технологий.\n   */\n  changeHoursLabel?: string;\n  /**\n   * Текст выпадающего списка с выбором минут. Делает его доступным для ассистивных технологий.\n   */\n  changeMinutesLabel?: string;\n  /**\n   * Обработчик изменения времени.\n   */\n  onChange?: (value: Date) => void;\n  /**\n   * Функция для проверки блокировки выбора даты и времени.\n   */\n  isDayDisabled?: (day: Date, withTime?: boolean) => boolean;\n}\n\nconst hours: Array<{\n  value: number;\n  label: string;\n}> = [];\nfor (let i = 0; i < 24; i += 1) {\n  hours.push({ value: i, label: String(i).padStart(2, '0') });\n}\n\nconst minutes: Array<{\n  value: number;\n  label: string;\n}> = [];\nfor (let i = 0; i < 60; i += 1) {\n  minutes.push({ value: i, label: String(i).padStart(2, '0') });\n}\n\nconst validateValue = (\n  value: string,\n  validValues: Array<{\n    value: number;\n    label: string;\n  }>,\n): boolean => {\n  const numValue = Number(value);\n  return !isNaN(numValue) && validValues.some((v) => v.value === numValue);\n};\n\nexport const CalendarTime = ({\n  value,\n  onChange,\n  onDoneButtonClick,\n  changeHoursLabel,\n  changeMinutesLabel,\n  isDayDisabled,\n  doneButtonText = 'Готово',\n  doneButtonDisabled = false,\n  doneButtonShow = true,\n  minutesTestId,\n  hoursTestId,\n  doneButtonTestId,\n  DoneButton,\n}: CalendarTimeProps): React.ReactNode => {\n  const hoursInputRef = useRef<HTMLInputElement | null>(null);\n  const minutesInputRef = useRef<HTMLInputElement | null>(null);\n  const doneButtonRef = useRef<HTMLButtonElement | null>(null);\n\n  const localHours = isDayDisabled\n    ? hours.map((hour) => {\n        return { ...hour, disabled: isDayDisabled(setHours(value, hour.value), true) };\n      })\n    : hours;\n\n  const localMinutes = isDayDisabled\n    ? minutes.map((minute) => {\n        return { ...minute, disabled: isDayDisabled(setMinutes(value, minute.value), true) };\n      })\n    : minutes;\n\n  const onPickerValueChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    validate: (numericValue: string) => boolean,\n    setter: (value: Date, numericValue: number) => Date,\n  ) => {\n    const numericValue = e.target.value.replace(/\\D/g, '');\n    e.target.value = numericValue;\n    if (validate(numericValue)) {\n      onChange?.(setter(value, Number(numericValue)));\n    }\n  };\n\n  const onHoursInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onPickerValueChange(e, (numValue) => validateValue(numValue, localHours), setHours);\n  };\n\n  const onMinutesInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    onPickerValueChange(e, (numValue) => validateValue(numValue, localMinutes), setMinutes);\n  };\n\n  const onHoursChange = React.useCallback(\n    (_: ChangeEvent<HTMLSelectElement>, newValue: SelectProps['value']) =>\n      onChange?.(setHours(value, Number(newValue))),\n    [onChange, value],\n  );\n  const onMinutesChange = React.useCallback(\n    (_: ChangeEvent<HTMLSelectElement>, newValue: SelectProps['value']) =>\n      onChange?.(setMinutes(value, Number(newValue))),\n    [onChange, value],\n  );\n\n  const onPickerKeyDown = (e: React.KeyboardEvent) => {\n    const key = pressedKey(e);\n    /* Мы хотим иметь возможность быстро, по Enter перемещаться между\n     * селектами с часами и минутами, также как мы это делаем по нажатию на Tab */\n    if (key !== Keys.ENTER) {\n      return;\n    }\n\n    const steps = [hoursInputRef, minutesInputRef, doneButtonRef].filter((ref) =>\n      Boolean(ref.current),\n    );\n    const currentStepIndex = steps.findIndex((step) => step.current === e.target);\n    const nextStepIndex = currentStepIndex + 1;\n    if (nextStepIndex >= steps.length) {\n      return;\n    }\n    const nextStep = steps[nextStepIndex];\n\n    if (nextStep.current) {\n      e.preventDefault();\n      nextStep.current?.focus();\n    }\n  };\n\n  const stopPropogationOfEscapeKeyboardEventWhenSelectIsOpen = React.useCallback(\n    (event: React.KeyboardEvent, isOpen: boolean) => {\n      if (isOpen && event.key === 'Escape') {\n        event.stopPropagation();\n      }\n    },\n    [],\n  );\n\n  const onSelectInputKeyDown = callMultiple(\n    onPickerKeyDown,\n    stopPropogationOfEscapeKeyboardEventWhenSelectIsOpen,\n  );\n\n  const renderDoneButton = () => {\n    const ButtonComponent = DoneButton ?? Button;\n    return (\n      <ButtonComponent\n        mode=\"secondary\"\n        onClick={onDoneButtonClick}\n        size=\"l\"\n        getRootRef={doneButtonRef}\n        onKeyDown={onPickerKeyDown}\n        disabled={doneButtonDisabled}\n        data-testid={doneButtonTestId}\n      >\n        {doneButtonText}\n      </ButtonComponent>\n    );\n  };\n\n  return (\n    <div className={classNames(styles.host, !doneButtonShow && styles.host__withoutDone)}>\n      <div className={styles.picker}>\n        <AdaptivityProvider sizeY=\"compact\">\n          <CustomSelect\n            value={value.getHours()}\n            options={localHours}\n            onChange={onHoursChange}\n            forceDropdownPortal={false}\n            searchable\n            filterFn={selectFilterFn}\n            onInputChange={onHoursInputChange}\n            onInputKeyDown={onSelectInputKeyDown}\n            getSelectInputRef={hoursInputRef}\n            aria-label={changeHoursLabel}\n            data-testid={hoursTestId}\n          />\n        </AdaptivityProvider>\n      </div>\n      <div className={styles.divider}>:</div>\n      <div className={styles.picker}>\n        <AdaptivityProvider sizeY=\"compact\">\n          <CustomSelect\n            value={value.getMinutes()}\n            options={localMinutes}\n            onChange={onMinutesChange}\n            forceDropdownPortal={false}\n            searchable\n            filterFn={selectFilterFn}\n            onInputChange={onMinutesInputChange}\n            getSelectInputRef={minutesInputRef}\n            onInputKeyDown={onSelectInputKeyDown}\n            aria-label={changeMinutesLabel}\n            data-testid={minutesTestId}\n          />\n        </AdaptivityProvider>\n      </div>\n      {doneButtonShow && (\n        <div className={styles.button}>\n          <AdaptivityProvider sizeY=\"compact\">{renderDoneButton()}</AdaptivityProvider>\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":["useRef","React","classNames","setHours","setMinutes","Keys","pressedKey","callMultiple","AdaptivityProvider","Button","CustomSelect","selectFilterFn","hours","i","push","value","label","String","padStart","minutes","validateValue","validValues","numValue","Number","isNaN","some","v","CalendarTime","onChange","onDoneButtonClick","changeHoursLabel","changeMinutesLabel","isDayDisabled","doneButtonText","doneButtonDisabled","doneButtonShow","minutesTestId","hoursTestId","doneButtonTestId","DoneButton","hoursInputRef","minutesInputRef","doneButtonRef","localHours","map","hour","disabled","localMinutes","minute","onPickerValueChange","e","validate","setter","numericValue","target","replace","onHoursInputChange","onMinutesInputChange","onHoursChange","useCallback","_","newValue","onMinutesChange","onPickerKeyDown","key","ENTER","steps","filter","ref","Boolean","current","currentStepIndex","findIndex","step","nextStepIndex","length","nextStep","preventDefault","focus","stopPropogationOfEscapeKeyboardEventWhenSelectIsOpen","event","isOpen","stopPropagation","onSelectInputKeyDown","renderDoneButton","ButtonComponent","mode","onClick","size","getRootRef","onKeyDown","data-testid","div","className","sizeY","getHours","options","forceDropdownPortal","searchable","filterFn","onInputChange","onInputKeyDown","getSelectInputRef","aria-label","getMinutes"],"mappings":"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"}