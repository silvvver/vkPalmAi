import * as React from 'react';
import { type UseFocusTrapProps } from '../../hooks/useFocusTrap';
import type { SharedDropdownProps } from './types';
type CloseInitiators = 'action-item' | 'cancel-item' | 'other';
export interface ActionSheetOnCloseOptions {
    /**
     * Причина закрытия всплывающего элемента.
     */
    closedBy: CloseInitiators;
}
export interface ActionSheetProps extends Pick<SharedDropdownProps, 'toggleRef' | 'popupOffsetDistance' | 'placement' | 'allowClickPropagation'>, Omit<UseFocusTrapProps, 'onClose' | 'mount' | 'disabled' | 'captureEscapeKeyboardEvent'>, Omit<React.HTMLAttributes<HTMLDivElement>, 'autoFocus' | 'title'> {
    /**
     * Заголовок всплыващего окна.
     */
    title?: React.ReactNode;
    /**
     * Описание всплыващего окна, под заголовком.
     */
    description?: React.ReactNode;
    /**
     * Закрыть всплыващее окно по нажатию снаружи.
     */
    onClose: (options: ActionSheetOnCloseOptions) => void;
    /**
     * Только мобильный iOS.
     */
    iosCloseItem?: React.ReactNode;
    /**
     * Режим отображения компонента:
     *
     * - `sheet` – отображение снизу экрана в виде всплывающего окна, подходит для мобильных устройств
     * - `menu` –  отображение в виде всплывающего элемента, относительно якорного элемента.
     */
    mode?: 'sheet' | 'menu';
    /**
     * @deprecated Since 7.3.0.
     *
     * Свойство не используется и будет удалено в `v8`.
     */
    mount?: boolean;
    /**
     * @deprecated Since 7.3.0.
     *
     * Свойство не используется и будет удалено в `v8`.
     */
    disabled?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/ActionSheet
 */
export declare const ActionSheet: ({ children, className, title, description, style, iosCloseItem, popupOffsetDistance, placement, mode: modeProp, onClose, ...restProps }: ActionSheetProps) => React.ReactNode;
export {};
//# sourceMappingURL=ActionSheet.d.ts.map