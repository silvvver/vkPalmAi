import * as React from 'react';
import type { HasRef, HTMLAttributesWithRootRef } from '../../types';
import { type ScrollArrowProps } from '../ScrollArrow/ScrollArrow';
export type ScrollPositionHandler = (currentPosition: number) => number;
export interface HorizontalScrollProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasRef<HTMLDivElement> {
    /**
     * Функция для расчета величины прокрутки при нажатии на левую стрелку.
     */
    getScrollToLeft?: ScrollPositionHandler;
    /**
     * Функция для расчета величины прокрутки при нажатии на правую стрелку.
     */
    getScrollToRight?: ScrollPositionHandler;
    /**
     * Размер стрелок.
     */
    arrowSize?: ScrollArrowProps['size'];
    /**
     * Смещает иконки кнопок навигации по вертикали.
     */
    arrowOffsetY?: number | string;
    /**
     * Показывать ли стрелки.
     */
    showArrows?: boolean | 'always';
    /**
     * Длительность анимации скролла.
     */
    scrollAnimationDuration?: number;
    /**
     * Добавляет возможность прокручивать контент на любое колесо мыши.
     * По умолчанию прокручивается как любой горизонтальный контент через shift.
     */
    scrollOnAnyWheel?: boolean;
    /**
     * Передает атрибут `data-testid` для кнопки прокрутки горизонтального скролла в направлении предыдущего элемента.
     */
    prevButtonTestId?: string;
    /**
     * Передает атрибут `data-testid` для кнопки прокрутки горизонтального скролла в направлении следующего элемента.
     */
    nextButtonTestId?: string;
    /**
     * Позволяет поменять тег используемый для обертки над контентом, прокинутым в `children`.
     */
    ContentWrapperComponent?: React.ElementType;
    /**
     * `ref` для обертки над контентом, прокинутым в `children`.
     */
    contentWrapperRef?: React.Ref<HTMLElement>;
    /**
     * Специфичный `className` для обертки над контентом, прокинутым в `children`.
     */
    contentWrapperClassName?: string;
}
/**
 * @see https://vkcom.github.io/VKUI/#/HorizontalScroll
 */
export declare const HorizontalScroll: ({ children, getScrollToLeft, getScrollToRight, showArrows, arrowSize, arrowOffsetY, scrollAnimationDuration, getRef, scrollOnAnyWheel, prevButtonTestId, nextButtonTestId, ContentWrapperComponent, contentWrapperRef, contentWrapperClassName, ...restProps }: HorizontalScrollProps) => React.ReactNode;
//# sourceMappingURL=HorizontalScroll.d.ts.map