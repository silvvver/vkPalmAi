import * as React from 'react';
import type { HasRef, HasRootRef, LiteralUnion } from '../../types';
import { type TappableProps } from '../Tappable/Tappable';
export declare const CUSTOM_CSS_TOKEN_FOR_CELL_WIDTH = "--vkui_internal--cell_width";
type HorizontalCellSizes = 's' | 'm' | 'l' | 'xl' | 'auto';
export interface HorizontalCellProps extends Omit<TappableProps, 'size' | 'getRootRef' | 'title' | 'borderRadiusMode'>, HasRootRef<HTMLDivElement>, HasRef<HTMLDivElement> {
    /**
     * Ширина компонента.
     *
     * Значения `'s' | 'm' | 'l' | 'xl'` определяются дизайн-системой.
     * Значение `auto` позволяет задать динамическую ширину, определяемую контентом.
     * Пользовательскую ширину можно задать через числовое значение.
     */
    size?: LiteralUnion<HorizontalCellSizes, number>;
    /**
     * Заголовок.
     */
    title?: React.ReactNode;
    /**
     * Дополнительная строка текста под `children`.
     */
    subtitle?: React.ReactNode;
    /**
     * Дополнительная строка текста под `children` и `subtitle`.
     */
    extraSubtitle?: React.ReactNode;
    /**
     * Задает выравнивание типографики. По умолчанию `center` для `size=s`, иначе `start`.
     */
    textAlign?: 'start' | 'center' | 'end';
    /**
     * Отключает формирование отступов у крайних элементов.
     *
     * Актуально для использования в многострочных списках.
     */
    noPadding?: boolean;
    /**
     * Позволяет передать типографический компонент, используемый для `title`.
     * По умолчанию `Caption` для `size=s`, иначе `Subhead`.
     */
    TitleComponent?: React.ElementType;
}
/**
 * @see https://vkcom.github.io/VKUI/#/HorizontalCell
 */
export declare const HorizontalCell: ({ className, title, style, subtitle, size, children, getRootRef, getRef, extraSubtitle, textAlign, noPadding, TitleComponent, ...restProps }: HorizontalCellProps) => React.ReactNode;
export {};
//# sourceMappingURL=HorizontalCell.d.ts.map