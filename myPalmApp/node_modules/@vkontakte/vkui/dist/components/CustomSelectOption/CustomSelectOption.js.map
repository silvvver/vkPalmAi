{"version":3,"sources":["../../../src/components/CustomSelectOption/CustomSelectOption.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { Icon16Done } from '@vkontakte/icons';\nimport { classNames, hasReactNode } from '@vkontakte/vkjs';\nimport { mergeStyle } from '../../helpers/mergeStyle';\nimport { useAdaptivity } from '../../hooks/useAdaptivity';\nimport type { CSSCustomProperties, HTMLAttributesWithRootRef } from '../../types';\nimport { Footnote } from '../Typography/Footnote/Footnote';\nimport { Paragraph } from '../Typography/Paragraph/Paragraph';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden';\nimport styles from './CustomSelectOption.module.css';\n\nconst sizeYClassNames = {\n  none: styles.sizeYNone,\n  regular: styles.sizeYRegular,\n};\n\nexport interface CustomSelectOptionProps extends HTMLAttributesWithRootRef<HTMLDivElement> {\n  /**\n   * Добавляет описание под основным блоком.\n   */\n  description?: React.ReactNode;\n  /**\n   * Вставляет элемент в начало блока перед основным контентом.\n   * Например, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.\n   */\n  before?: React.ReactNode;\n  /**\n   * Вставляет элемент в конец блока после основного контента.\n   * Например, можно передать компонент `Avatar`, `Icon<Name>` или другие изображения.\n   */\n  after?: React.ReactNode;\n  /**\n   * Позволяет создавать вложенность.\n   */\n  hierarchy?: number;\n  /**\n   * Включает состояние выбранного элемента списка.\n   */\n  selected?: boolean;\n  /**\n   * Включает состояние наведения.\n   */\n  hovered?: boolean;\n  /**\n   * Включает состояние фокуса.\n   */\n  focused?: boolean;\n  /**\n   * Блокирует весь блок.\n   *\n   * > ⚠️  Важно: если CustomSelectOption используется внутри [Select](https://vkcom.github.io/VKUI/#/Select), [CustomSelect](https://vkcom.github.io/VKUI/#/CustomSelect) или [ChipsSelect](https://vkcom.github.io/VKUI/#/ChipsSelect), то свойство явно должно выставляться только через структуру `options`.\n   * > Запрещается выставлять `disabled` проп опциям в обход `options`, иначе [CustomSelect](https://vkcom.github.io/VKUI/#/CustomSelect) и [ChipsSelect](https://vkcom.github.io/VKUI/#/ChipsSelect) не будут знать об актуальном состоянии\n   * опции.\n   */\n  disabled?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/CustomSelectOption\n */\nexport const CustomSelectOption = ({\n  children,\n  hierarchy = 0,\n  hovered: hoveredProp,\n  selected,\n  before,\n  after,\n  description,\n  disabled,\n  style: styleProp,\n  className,\n  onClick,\n  ...restProps\n}: CustomSelectOptionProps): React.ReactNode => {\n  const { sizeY = 'none' } = useAdaptivity();\n  const style: (React.CSSProperties & CSSCustomProperties<number>) | undefined = React.useMemo(\n    () =>\n      hierarchy > 0\n        ? {\n            '--vkui_internal--custom_select_option_hierarchy_level': hierarchy,\n          }\n        : undefined,\n    [hierarchy],\n  );\n  const hovered = hoveredProp && !disabled ? true : false;\n\n  return (\n    <Paragraph\n      {...restProps}\n      onClick={disabled ? undefined : onClick}\n      Component=\"div\"\n      role=\"option\"\n      aria-disabled={disabled}\n      aria-selected={selected}\n      data-hovered={hovered}\n      className={classNames(\n        styles.host,\n        sizeY !== 'compact' && sizeYClassNames[sizeY],\n        hovered && styles.hover,\n        disabled && styles.disabled,\n        hierarchy > 0 && styles.hierarchy,\n        className,\n      )}\n      style={mergeStyle(style, styleProp)}\n    >\n      {hasReactNode(before) && <div className={styles.before}>{before}</div>}\n      <div className={styles.main}>\n        <div className={styles.children}>{children}</div>\n        {hasReactNode(description) && (\n          <Footnote className={styles.description}>\n            <VisuallyHidden>&nbsp;</VisuallyHidden>\n            {description}\n          </Footnote>\n        )}\n      </div>\n      <div className={styles.after}>\n        {hasReactNode(after) && <div>{after}</div>}\n        {selected && <Icon16Done className={styles.selectedIcon} />}\n      </div>\n    </Paragraph>\n  );\n};\n"],"names":["React","Icon16Done","classNames","hasReactNode","mergeStyle","useAdaptivity","Footnote","Paragraph","VisuallyHidden","sizeYClassNames","none","regular","CustomSelectOption","children","hierarchy","hovered","hoveredProp","selected","before","after","description","disabled","style","styleProp","className","onClick","restProps","sizeY","useMemo","undefined","Component","role","aria-disabled","aria-selected","data-hovered","div"],"mappings":"AAAA;;;;;AAEA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,UAAU,EAAEC,YAAY,QAAQ,kBAAkB;AAC3D,SAASC,UAAU,QAAQ,8BAA2B;AACtD,SAASC,aAAa,QAAQ,+BAA4B;AAE1D,SAASC,QAAQ,QAAQ,qCAAkC;AAC3D,SAASC,SAAS,QAAQ,uCAAoC;AAC9D,SAASC,cAAc,QAAQ,sCAAmC;AAGlE,MAAMC,kBAAkB;IACtBC,IAAI;IACJC,OAAO;AACT;AA2CA;;CAEC,GACD,OAAO,MAAMC,qBAAqB;QAAC,EACjCC,QAAQ,EACRC,YAAY,CAAC,EACbC,SAASC,WAAW,EACpBC,QAAQ,EACRC,MAAM,EACNC,KAAK,EACLC,WAAW,EACXC,QAAQ,EACRC,OAAOC,SAAS,EAChBC,SAAS,EACTC,OAAO,EAEiB,WADrBC;QAXHb;QACAC;QACAC;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAE;QACAC;;IAGA,MAAM,EAAEE,QAAQ,MAAM,EAAE,GAAGtB;IAC3B,MAAMiB,QAAyEtB,MAAM4B,OAAO,CAC1F,IACEd,YAAY,IACR;YACE,yDAAyDA;QAC3D,IACAe,WACN;QAACf;KAAU;IAEb,MAAMC,UAAUC,eAAe,CAACK,WAAW,OAAO;IAElD,qBACE,MAACd,mDACKmB;QACJD,SAASJ,WAAWQ,YAAYJ;QAChCK,WAAU;QACVC,MAAK;QACLC,iBAAeX;QACfY,iBAAehB;QACfiB,gBAAcnB;QACdS,WAAWtB,2CAETyB,UAAU,aAAalB,eAAe,CAACkB,MAAM,EAC7CZ,4CACAM,gDACAP,YAAY,0CACZU;QAEFF,OAAOlB,WAAWkB,OAAOC;;YAExBpB,aAAae,yBAAW,KAACiB;gBAAIX,SAAS;0BAAkBN;;0BACzD,MAACiB;gBAAIX,SAAS;;kCACZ,KAACW;wBAAIX,SAAS;kCAAoBX;;oBACjCV,aAAaiB,8BACZ,MAACd;wBAASkB,SAAS;;0CACjB,KAAChB;0CAAe;;4BACfY;;;;;0BAIP,MAACe;gBAAIX,SAAS;;oBACXrB,aAAagB,wBAAU,KAACgB;kCAAKhB;;oBAC7BF,0BAAY,KAAChB;wBAAWuB,SAAS;;;;;;AAI1C,EAAE"}