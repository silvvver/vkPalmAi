import * as React from 'react';
import type { Placement } from '../../lib/floating';
import type { HasDataAttribute, HTMLAttributesWithRootRef } from '../../types';
import { type CustomScrollViewProps } from '../CustomScrollView/CustomScrollView';
export interface CustomSelectDropdownProps extends HTMLAttributesWithRootRef<HTMLDivElement>, Pick<CustomScrollViewProps, 'overscrollBehavior'>, HasDataAttribute {
    targetRef: React.RefObject<HTMLElement | null>;
    placement?: Placement;
    scrollBoxRef?: React.Ref<HTMLDivElement>;
    fetching?: boolean;
    offsetDistance?: number;
    /**
     * Ширина раскрывающегося списка зависит от контента.
     */
    autoWidth?: boolean;
    forcePortal?: boolean;
    onPlacementChange?: (placement: Placement) => void;
    /**
     * Отключает максимальную высоту по умолчанию.
     */
    noMaxHeight?: boolean;
}
export declare const CustomSelectDropdown: ({ children, targetRef, scrollBoxRef, placement, fetching, offsetDistance, autoWidth, forcePortal, className, noMaxHeight, overscrollBehavior, ...restProps }: CustomSelectDropdownProps) => React.ReactNode;
//# sourceMappingURL=CustomSelectDropdown.d.ts.map