{"version":3,"sources":["../../../src/components/CustomSelectDropdown/CustomSelectDropdown.tsx"],"sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { classNames } from '@vkontakte/vkjs';\nimport type { Placement } from '../../lib/floating';\nimport type { HasDataAttribute, HTMLAttributesWithRootRef } from '../../types';\nimport { CustomScrollView, type CustomScrollViewProps } from '../CustomScrollView/CustomScrollView';\nimport { Popper } from '../Popper/Popper';\nimport { Spinner } from '../Spinner/Spinner';\nimport styles from './CustomSelectDropdown.module.css';\n\nexport interface CustomSelectDropdownProps\n  extends HTMLAttributesWithRootRef<HTMLDivElement>,\n    Pick<CustomScrollViewProps, 'overscrollBehavior'>,\n    HasDataAttribute {\n  targetRef: React.RefObject<HTMLElement | null>;\n  placement?: Placement;\n  scrollBoxRef?: React.Ref<HTMLDivElement>;\n  fetching?: boolean;\n  offsetDistance?: number;\n  /**\n   * Ширина раскрывающегося списка зависит от контента.\n   */\n  autoWidth?: boolean;\n  forcePortal?: boolean;\n  onPlacementChange?: (placement: Placement) => void;\n  /**\n   * Отключает максимальную высоту по умолчанию.\n   */\n  noMaxHeight?: boolean;\n}\n\nexport const CustomSelectDropdown = ({\n  children,\n  targetRef,\n  scrollBoxRef,\n  placement = 'bottom',\n  fetching,\n  offsetDistance = 0,\n  autoWidth = false,\n  forcePortal = true,\n  className,\n  noMaxHeight = false,\n  // CustomScrollView\n  overscrollBehavior,\n  ...restProps\n}: CustomSelectDropdownProps): React.ReactNode => {\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetByMainAxis={offsetDistance}\n      sameWidth={!autoWidth}\n      placement={placement}\n      className={classNames(\n        styles.host,\n        'vkuiInternalCustomSelectDropdown',\n        offsetDistance === 0 && (placement.includes('top') ? styles.top : styles.bottom),\n        autoWidth && classNames(styles.wide, 'vkuiInternalCustomSelectDropdown--wide'),\n        className,\n      )}\n      usePortal={forcePortal}\n      autoUpdateOnTargetResize\n      flipMiddlewareFallbackAxisSideDirection=\"none\"\n      {...restProps}\n    >\n      <CustomScrollView\n        getRootRef={scrollBoxRef}\n        className={noMaxHeight ? undefined : styles.inWithMaxHeight}\n        overscrollBehavior={overscrollBehavior}\n        tabIndex={-1}\n      >\n        {fetching ? (\n          <div className={styles.fetching}>\n            <Spinner size=\"s\" />\n          </div>\n        ) : (\n          children\n        )}\n      </CustomScrollView>\n    </Popper>\n  );\n};\n"],"names":["React","classNames","CustomScrollView","Popper","Spinner","CustomSelectDropdown","children","targetRef","scrollBoxRef","placement","fetching","offsetDistance","autoWidth","forcePortal","className","noMaxHeight","overscrollBehavior","restProps","offsetByMainAxis","sameWidth","includes","usePortal","autoUpdateOnTargetResize","flipMiddlewareFallbackAxisSideDirection","getRootRef","undefined","tabIndex","div","size"],"mappings":"AAAA,sCAAsC;;;;AAEtC,YAAYA,WAAW,QAAQ;AAC/B,SAASC,UAAU,QAAQ,kBAAkB;AAG7C,SAASC,gBAAgB,QAAoC,0CAAuC;AACpG,SAASC,MAAM,QAAQ,sBAAmB;AAC1C,SAASC,OAAO,QAAQ,wBAAqB;AAwB7C,OAAO,MAAMC,uBAAuB;QAAC,EACnCC,QAAQ,EACRC,SAAS,EACTC,YAAY,EACZC,YAAY,QAAQ,EACpBC,QAAQ,EACRC,iBAAiB,CAAC,EAClBC,YAAY,KAAK,EACjBC,cAAc,IAAI,EAClBC,SAAS,EACTC,cAAc,KAAK,EACnB,mBAAmB;IACnBC,kBAAkB,EAEQ,WADvBC;QAZHX;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QAEAC;;IAGA,qBACE,KAACb;QACCI,WAAWA;QACXW,kBAAkBP;QAClBQ,WAAW,CAACP;QACZH,WAAWA;QACXK,WAAWb,6CAET,oCACAU,mBAAmB,KAAMF,CAAAA,UAAUW,QAAQ,CAAC,6EAAkC,GAC9ER,aAAaX,6CAAwB,2CACrCa;QAEFO,WAAWR;QACXS,wBAAwB;QACxBC,yCAAwC;OACpCN;kBAEJ,cAAA,KAACf;YACCsB,YAAYhB;YACZM,WAAWC,cAAcU;YACzBT,oBAAoBA;YACpBU,UAAU,CAAC;sBAEVhB,yBACC,KAACiB;gBAAIb,SAAS;0BACZ,cAAA,KAACV;oBAAQwB,MAAK;;iBAGhBtB;;;AAKV,EAAE"}