import * as React from 'react';
import type { Placement } from '../../lib/floating';
import type { HasDataAttribute, HTMLAttributesWithRootRef } from '../../types';
export type Coords = {
    /** Координата x. */
    x?: number;
    /** Координата y. */
    y?: number;
};
export declare const placementClassNames: {
    right: string;
    bottom: string;
    left: string;
};
export interface FloatingArrowProps extends HTMLAttributesWithRootRef<HTMLDivElement>, HasDataAttribute {
    /**
     * Сдвиг стрелки относительно текущих координат.
     */
    offset?: number;
    /**
     * Включает абсолютное смещение по `offset`.
     */
    isStaticOffset?: boolean;
    /**
     * Координаты стрелки.
     */
    coords?: Coords;
    /**
     * Расположение всплывающего элемента.
     */
    placement?: Placement;
    /**
     * Стили иконки.
     */
    iconStyle?: React.CSSProperties;
    /**
     * `className` для иконки.
     */
    iconClassName?: string;
    /**
     * Иконка для отображения стрелки.
     */
    Icon?: React.ComponentType<React.SVGAttributes<SVGSVGElement>>;
}
/**
 * Иконка-стрелка для всплывающих окон.
 *
 * @since 7.0.0
 */
export declare const FloatingArrow: ({ offset, isStaticOffset, coords, iconStyle, iconClassName, placement, Icon, ...restProps }: FloatingArrowProps) => React.ReactNode;
//# sourceMappingURL=FloatingArrow.d.ts.map