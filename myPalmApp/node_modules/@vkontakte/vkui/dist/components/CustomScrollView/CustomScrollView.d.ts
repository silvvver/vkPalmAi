import * as React from 'react';
import type { HasRootRef } from '../../types';
export interface CustomScrollViewProps extends React.AllHTMLAttributes<HTMLDivElement>, HasRootRef<HTMLDivElement> {
    /**
     * `className` для компонента.
     */
    className?: HTMLDivElement['className'];
    /**
     * Обработчик события `scroll`.
     */
    onScroll?: (event: React.UIEvent<HTMLDivElement>) => void;
    /**
     * Содержимое.
     */
    children: React.ReactNode;
    /**
     * Поведение overscroll, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior).
     */
    overscrollBehavior?: 'auto' | 'contain' | 'none';
    /**
     * Поведение scroll-behavior, подробнее можно почитать в [документации](https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior).
     */
    scrollBehavior?: 'auto' | 'smooth';
    /**
     * Включение отображения горизонтального скролла.
     */
    enableHorizontalScroll?: boolean;
    /**
     * Скрытие скроллбара.
     *
     * > В версии ниже Firefox 64 будет виден скролл.
     */
    scrollbarHidden?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/CustomScrollView
 */
export declare const CustomScrollView: ({ className, children, enableHorizontalScroll, onScroll, getRootRef, overscrollBehavior, scrollBehavior, scrollbarHidden, ...restProps }: CustomScrollViewProps) => React.ReactNode;
//# sourceMappingURL=CustomScrollView.d.ts.map