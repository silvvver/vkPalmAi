import * as React from 'react';
import type { HasComponent, HTMLAttributesWithRootRef } from '../../types';
export interface PlaceholderContainerProps extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'title'> {
    /**
     * Растягивает плейсхолдер на весь экран, но в таком случае на экране должен быть только плейсхолдер.
     */
    stretched?: boolean;
    /**
     * Убирает отступы у компонента.
     */
    noPadding?: boolean;
}
declare const PlaceholderContainer: ({ stretched, noPadding, ...restProps }: PlaceholderContainerProps) => React.ReactNode;
export type PlaceholderIconProps = HTMLAttributesWithRootRef<HTMLDivElement>;
declare const PlaceholderIcon: (props: PlaceholderIconProps) => React.ReactNode;
export type PlaceholderTitleProps = HTMLAttributesWithRootRef<HTMLElement> & HasComponent;
declare const PlaceholderTitle: ({ className, ...restProps }: PlaceholderTitleProps) => React.ReactNode;
export type PlaceholderDescriptionProps = HTMLAttributesWithRootRef<HTMLElement> & HasComponent;
declare const PlaceholderDescription: ({ className, ...restProps }: PlaceholderDescriptionProps) => React.ReactNode;
export type PlaceholderActionsProps = HTMLAttributesWithRootRef<HTMLDivElement>;
declare const PlaceholderActions: (props: PlaceholderActionsProps) => React.ReactNode;
export interface PlaceholderProps extends PlaceholderContainerProps {
    /**
     * Иконка.
     */
    icon?: React.ReactNode;
    /**
     * Заголовок плейсхолдера.
     */
    title?: React.ReactNode;
    /**
     * Кнопка действия.
     */
    action?: React.ReactNode;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Placeholder
 */
export declare const Placeholder: React.FC<PlaceholderProps> & {
    Container: typeof PlaceholderContainer;
    Icon: typeof PlaceholderIcon;
    Title: typeof PlaceholderTitle;
    Description: typeof PlaceholderDescription;
    Actions: typeof PlaceholderActions;
};
export {};
//# sourceMappingURL=Placeholder.d.ts.map