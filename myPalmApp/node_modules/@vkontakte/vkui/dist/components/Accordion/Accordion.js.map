{"version":3,"sources":["../../../src/components/Accordion/Accordion.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useCustomEnsuredControl } from '../../hooks/useEnsuredControl';\nimport { defineComponentDisplayNames } from '../../lib/react/defineComponentDisplayNames';\nimport type { HasChildren } from '../../types';\nimport { AccordionContent } from './AccordionContent';\nimport { AccordionContext } from './AccordionContext';\nimport { AccordionSummary } from './AccordionSummary';\n\nfunction useAccordionId(id: AccordionProps['id']) {\n  const generatedId = React.useId();\n  const labelId = id ?? `Accordion${generatedId}`;\n  const contentId = `AccordionContent${id ?? generatedId}`;\n\n  return { labelId, contentId };\n}\n\nexport interface AccordionProps extends HasChildren {\n  /**\n   * Используется для генерации id для заголовка и контента(a11y).\n   */\n  id?: string;\n  /**\n   * Управляет раскрытием и скрытием контента.\n   */\n  expanded?: boolean;\n  /**\n   * Значение по умолчанию.\n   */\n  defaultExpanded?: boolean;\n  /**\n   * Возвращает новое значение при изменении раскрытия/сворачивания контента.\n   */\n  onChange?: (newValue: boolean) => void;\n  /**\n   * Блокировка взаимодействия с компонентом.\n   */\n  disabled?: boolean;\n}\n\nexport const Accordion: React.FC<AccordionProps> & {\n  Summary: typeof AccordionSummary;\n  Content: typeof AccordionContent;\n} = ({\n  id,\n  expanded: expandedProp,\n  defaultExpanded = false,\n  onChange: onChangeProp,\n  children,\n  ...restProps\n}: AccordionProps) => {\n  const { labelId, contentId } = useAccordionId(id);\n\n  const [expanded, onChange] = useCustomEnsuredControl({\n    value: expandedProp,\n    defaultValue: defaultExpanded,\n    onChange: onChangeProp,\n    disabled: restProps.disabled,\n  });\n\n  const context = React.useMemo(\n    () => ({\n      labelId,\n      contentId,\n      expanded: expanded || false,\n      onChange,\n    }),\n    [contentId, expanded, labelId, onChange],\n  );\n\n  return <AccordionContext.Provider value={context}>{children}</AccordionContext.Provider>;\n};\n\nAccordion.Summary = AccordionSummary;\nAccordion.Content = AccordionContent;\n\nif (process.env.NODE_ENV !== 'production') {\n  defineComponentDisplayNames(Accordion.Summary, 'Accordion.Summary');\n  defineComponentDisplayNames(Accordion.Content, 'Accordion.Content');\n}\n"],"names":["React","useCustomEnsuredControl","defineComponentDisplayNames","AccordionContent","AccordionContext","AccordionSummary","useAccordionId","id","generatedId","useId","labelId","contentId","Accordion","expanded","expandedProp","defaultExpanded","onChange","onChangeProp","children","restProps","value","defaultValue","disabled","context","useMemo","Provider","Summary","Content","process","env","NODE_ENV"],"mappings":"AAAA;;;AAEA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,uBAAuB,QAAQ,mCAAgC;AACxE,SAASC,2BAA2B,QAAQ,iDAA8C;AAE1F,SAASC,gBAAgB,QAAQ,wBAAqB;AACtD,SAASC,gBAAgB,QAAQ,wBAAqB;AACtD,SAASC,gBAAgB,QAAQ,wBAAqB;AAEtD,SAASC,eAAeC,EAAwB;IAC9C,MAAMC,cAAcR,MAAMS,KAAK;IAC/B,MAAMC,UAAUH,eAAAA,gBAAAA,KAAM,CAAC,SAAS,EAAEC,aAAa;IAC/C,MAAMG,YAAY,CAAC,gBAAgB,EAAEJ,eAAAA,gBAAAA,KAAMC,aAAa;IAExD,OAAO;QAAEE;QAASC;IAAU;AAC9B;AAyBA,OAAO,MAAMC,YAGT;QAAC,EACHL,EAAE,EACFM,UAAUC,YAAY,EACtBC,kBAAkB,KAAK,EACvBC,UAAUC,YAAY,EACtBC,QAAQ,EAEO,WADZC;QALHZ;QACAM;QACAE;QACAC;QACAE;;IAGA,MAAM,EAAER,OAAO,EAAEC,SAAS,EAAE,GAAGL,eAAeC;IAE9C,MAAM,CAACM,UAAUG,SAAS,GAAGf,wBAAwB;QACnDmB,OAAON;QACPO,cAAcN;QACdC,UAAUC;QACVK,UAAUH,UAAUG,QAAQ;IAC9B;IAEA,MAAMC,UAAUvB,MAAMwB,OAAO,CAC3B,IAAO,CAAA;YACLd;YACAC;YACAE,UAAUA,YAAY;YACtBG;QACF,CAAA,GACA;QAACL;QAAWE;QAAUH;QAASM;KAAS;IAG1C,qBAAO,KAACZ,iBAAiBqB,QAAQ;QAACL,OAAOG;kBAAUL;;AACrD,EAAE;AAEFN,UAAUc,OAAO,GAAGrB;AACpBO,UAAUe,OAAO,GAAGxB;AAEpB,IAAIyB,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;IACzC5B,4BAA4BU,UAAUc,OAAO,EAAE;IAC/CxB,4BAA4BU,UAAUe,OAAO,EAAE;AACjD"}