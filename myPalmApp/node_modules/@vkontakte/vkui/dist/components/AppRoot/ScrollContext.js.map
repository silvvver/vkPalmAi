{"version":3,"sources":["../../../src/components/AppRoot/ScrollContext.tsx"],"sourcesContent":["'use client';\n/* eslint-disable jsdoc/require-jsdoc */\n\nimport * as React from 'react';\nimport { noop } from '@vkontakte/vkjs';\nimport { clamp } from '../../helpers/math';\nimport { useDOM } from '../../lib/dom';\nimport type { HasChildren } from '../../types';\n\nconst clearDisableScrollStyle = (node: HTMLElement) => {\n  Object.assign(node.style, {\n    position: '',\n    top: '',\n    left: '',\n    right: '',\n    overscrollBehavior: '',\n    overflowY: '',\n    overflowX: '',\n  });\n};\n\nconst getPageYOffsetWithoutKeyboardHeight = (window: Window, scrollTop: number) => {\n  // Note: здесь расчёт на то, что `clientHeight` равен `window.innerHeight`.\n  //  Это достигается тем, что тегу `html` задали`height: 100%` и у него нет отступов сверху и снизу. Если есть отступы,\n  //  то надо задать `box-sizing: border-box`, чтобы они не учитывались.\n  const diffOfClientHeightAndViewportHeight =\n    window.document.documentElement.clientHeight - window.innerHeight;\n  return scrollTop - diffOfClientHeightAndViewportHeight;\n};\n\nexport type GetScrollOptions = {\n  compensateKeyboardHeight?: boolean;\n};\n\nexport interface ScrollContextInterface {\n  getScroll: (this: void, options?: GetScrollOptions) => { x: number; y: number };\n  scrollTo: (this: void, x?: number, y?: number) => void;\n  /**\n   * Увеличивает счетчик блокировки прокрутки.\n   */\n  incrementScrollLockCounter: (this: void) => void;\n  /**\n   * Уменьшает счетчик блокировки прокрутки.\n   */\n  decrementScrollLockCounter: (this: void) => void;\n  beforeScrollLockFnSetRef?: React.RefObject<Set<() => void>>;\n}\n\nexport const ScrollContext: React.Context<ScrollContextInterface> =\n  React.createContext<ScrollContextInterface>({\n    getScroll: () => ({ x: 0, y: 0 }),\n    scrollTo: noop,\n    incrementScrollLockCounter: noop,\n    decrementScrollLockCounter: noop,\n  });\n\nexport const useScroll = (): ScrollContextInterface => React.useContext(ScrollContext);\n\n/**\n * Управляет блокировкой окна в зависимости от внутреннего счетчика.\n * Если счетчик больше нуля, требуется заблокировать прокрутку.\n */\nfunction useScrollLockController(enableScrollLock: () => void, disableScrollLock: () => void) {\n  const countRef = React.useRef(0);\n\n  const updateScrollLock = React.useCallback(() => {\n    if (countRef.current > 0) {\n      enableScrollLock();\n    } else {\n      disableScrollLock();\n    }\n  }, [enableScrollLock, disableScrollLock]);\n\n  const incrementScrollLockCounter = React.useCallback(() => {\n    countRef.current += 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n\n  const decrementScrollLockCounter = React.useCallback(() => {\n    countRef.current -= 1;\n    updateScrollLock();\n  }, [updateScrollLock]);\n\n  return [incrementScrollLockCounter, decrementScrollLockCounter];\n}\n\nexport function useManualScroll(): Pick<ScrollContextInterface, 'scrollTo' | 'getScroll'> {\n  const { scrollTo, getScroll } = React.useContext(ScrollContext);\n  return React.useMemo(\n    () => ({\n      scrollTo,\n      getScroll,\n    }),\n    [getScroll, scrollTo],\n  );\n}\n\nexport interface ScrollControllerProps extends HasChildren {\n  elRef: React.RefObject<HTMLElement | null>;\n}\n\nconst _scrollTo = ({\n  x,\n  y,\n  scrollWidth,\n  clientWidth,\n  scrollHeight,\n  clientHeight,\n  scrollLockEnabled,\n  lockedElement,\n  elementToScroll,\n}: {\n  x: number;\n  y: number;\n  scrollWidth: number;\n  clientWidth: number;\n  scrollHeight: number;\n  clientHeight: number;\n  scrollLockEnabled: boolean;\n  lockedElement: HTMLElement;\n  elementToScroll: Window | HTMLElement;\n}) => {\n  // Some iOS versions do not normalize scroll — do it manually.\n  const left = x ? clamp(x, 0, scrollWidth - clientWidth) : 0;\n  const top = y ? clamp(y, 0, scrollHeight - clientHeight) : 0;\n\n  if (scrollLockEnabled) {\n    Object.assign(lockedElement.style, {\n      left: `-${left}px`,\n      top: `-${top}px`,\n    });\n  } else {\n    elementToScroll.scrollTo({\n      left,\n      top,\n    });\n  }\n};\n\nconst _getScroll = ({\n  xOffset,\n  yOffset,\n  element,\n  scrollLockEnabled,\n  customCalcY = (v) => v,\n}: {\n  xOffset: number;\n  yOffset: number;\n  element: HTMLElement;\n  scrollLockEnabled: boolean;\n  customCalcY?: (scrollTop: number) => number;\n}) => {\n  const elementStyles = element.style;\n  const [scrollLeft, scrollTop] = scrollLockEnabled\n    ? [-parseFloat(elementStyles.left || '0'), -parseFloat(elementStyles.top || '0')]\n    : [xOffset, yOffset];\n  return {\n    x: scrollLeft,\n    y: customCalcY(scrollTop),\n  };\n};\n\nexport const GlobalScrollController = ({ children }: ScrollControllerProps): React.ReactNode => {\n  const { window, document } = useDOM();\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(\n    (options = { compensateKeyboardHeight: true }) => {\n      if (!window || !document) {\n        return { x: 0, y: 0 };\n      }\n      return _getScroll({\n        xOffset: window.pageXOffset,\n        yOffset: window.pageYOffset,\n        element: document.documentElement,\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        customCalcY: (scrollTop) =>\n          options.compensateKeyboardHeight\n            ? getPageYOffsetWithoutKeyboardHeight(window, scrollTop)\n            : scrollTop,\n      });\n    },\n    [document, window],\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      if (!window || !document) {\n        return;\n      }\n      _scrollTo({\n        x,\n        y,\n\n        scrollWidth: document.body.scrollWidth,\n        clientWidth: window.innerWidth,\n\n        scrollHeight: document.body.scrollHeight,\n        clientHeight: window.innerHeight,\n\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        lockedElement: document.documentElement,\n        elementToScroll: window,\n      });\n    },\n    [document, window],\n  );\n\n  const enableScrollLock = React.useCallback(() => {\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n    const { x: scrollX, y: scrollY } = getScroll({ compensateKeyboardHeight: false });\n    const overflowY = window!.innerWidth > document!.documentElement.clientWidth ? 'scroll' : '';\n    const overflowX = window!.innerHeight > document!.documentElement.clientHeight ? 'scroll' : '';\n\n    Object.assign(document!.documentElement.style, {\n      position: 'fixed',\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      right: '0',\n      overscrollBehavior: 'none',\n      overflowY,\n      overflowX,\n    });\n\n    scrollLockEnabledRef.current = true;\n  }, [document, getScroll, window]);\n\n  const disableScrollLock = React.useCallback(() => {\n    const scrollData = getScroll({ compensateKeyboardHeight: false });\n    clearDisableScrollStyle(document!.documentElement);\n    scrollLockEnabledRef.current = false;\n\n    scrollTo(scrollData.x, scrollData.y);\n  }, [document, getScroll, scrollTo]);\n\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(\n    enableScrollLock,\n    disableScrollLock,\n  );\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      incrementScrollLockCounter,\n      decrementScrollLockCounter,\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\nexport const ElementScrollController = ({\n  elRef,\n  children,\n}: ScrollControllerProps): React.ReactNode => {\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n  const scrollLockEnabledRef = React.useRef(false);\n\n  const getScroll = React.useCallback<ScrollContextInterface['getScroll']>(() => {\n    const element = elRef.current;\n    if (!element) {\n      return { x: 0, y: 0 };\n    }\n    return _getScroll({\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      element: element,\n      scrollLockEnabled: scrollLockEnabledRef.current,\n    });\n  }, [elRef]);\n\n  const scrollTo = React.useCallback<ScrollContextInterface['scrollTo']>(\n    (x = 0, y = 0) => {\n      const el = elRef.current;\n      if (!el) {\n        return;\n      }\n      _scrollTo({\n        x,\n        y,\n\n        scrollWidth: el.scrollWidth,\n        clientWidth: el.clientWidth,\n\n        scrollHeight: el.scrollHeight,\n        clientHeight: el.clientHeight,\n\n        scrollLockEnabled: scrollLockEnabledRef.current,\n        lockedElement: el,\n        elementToScroll: el,\n      });\n    },\n    [elRef],\n  );\n\n  const enableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const { x: scrollX, y: scrollY } = getScroll();\n\n    const overflowY = el.scrollWidth > el.clientWidth ? 'scroll' : '';\n    const overflowX = el.scrollHeight > el.clientHeight ? 'scroll' : '';\n\n    Object.assign(el.style, {\n      position: 'absolute',\n      right: '0',\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      overflowY,\n      overflowX,\n    });\n    scrollLockEnabledRef.current = true;\n  }, [elRef, getScroll]);\n\n  const disableScrollLock = React.useCallback(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n\n    const scrollData = getScroll();\n    clearDisableScrollStyle(el);\n    scrollLockEnabledRef.current = false;\n\n    scrollTo(scrollData.x, scrollData.y);\n  }, [elRef, getScroll, scrollTo]);\n\n  const [incrementScrollLockCounter, decrementScrollLockCounter] = useScrollLockController(\n    enableScrollLock,\n    disableScrollLock,\n  );\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      incrementScrollLockCounter,\n      decrementScrollLockCounter,\n      beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, incrementScrollLockCounter, decrementScrollLockCounter],\n  );\n\n  return <ScrollContext.Provider value={scrollController}>{children}</ScrollContext.Provider>;\n};\n\n/**\n * Блокирует прокрутку окна.\n *\n * @param enabled - Если false то не будет блокировать.\n */\nexport const useScrollLock = (enabled = true): void => {\n  const { incrementScrollLockCounter, decrementScrollLockCounter } = useScroll();\n\n  React.useEffect(() => {\n    if (enabled) {\n      incrementScrollLockCounter();\n      return decrementScrollLockCounter;\n    }\n\n    return noop;\n  }, [enabled, incrementScrollLockCounter, decrementScrollLockCounter]);\n};\n"],"names":["React","noop","clamp","useDOM","clearDisableScrollStyle","node","Object","assign","style","position","top","left","right","overscrollBehavior","overflowY","overflowX","getPageYOffsetWithoutKeyboardHeight","window","scrollTop","diffOfClientHeightAndViewportHeight","document","documentElement","clientHeight","innerHeight","ScrollContext","createContext","getScroll","x","y","scrollTo","incrementScrollLockCounter","decrementScrollLockCounter","useScroll","useContext","useScrollLockController","enableScrollLock","disableScrollLock","countRef","useRef","updateScrollLock","useCallback","current","useManualScroll","useMemo","_scrollTo","scrollWidth","clientWidth","scrollHeight","scrollLockEnabled","lockedElement","elementToScroll","_getScroll","xOffset","yOffset","element","customCalcY","v","elementStyles","scrollLeft","parseFloat","GlobalScrollController","children","beforeScrollLockFnSetRef","Set","scrollLockEnabledRef","options","compensateKeyboardHeight","pageXOffset","pageYOffset","body","innerWidth","forEach","fn","scrollX","scrollY","scrollData","scrollController","Provider","value","ElementScrollController","elRef","el","useScrollLock","enabled","useEffect"],"mappings":"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"}