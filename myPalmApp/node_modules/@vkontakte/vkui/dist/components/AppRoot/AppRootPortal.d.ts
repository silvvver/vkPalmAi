import * as React from 'react';
import type { HasChildren } from '../../types';
export interface AppRootPortalProps extends HasChildren {
    /**
     * Настройка портала для рендеринга компонента.
     *
     * `true` - использует `portalRoot` из контекста `AppRoot` (если доступен) или `document.body`;
     * `false` - отключает использование портала;
     * `HTMLElement` - указывает конкретный DOM-элемент для использования в качестве портала;
     * `React.RefObject<HTMLElement | null>` - ссылка на DOM-элемент для использования в качестве портала;
     * `null` - эквивалентно `false`, отключает использование портала.
     *
     * @default true (использует `document.body` как портал по умолчанию)
     */
    usePortal?: boolean | HTMLElement | React.RefObject<HTMLElement | null> | null;
    /**
     * `className` для контейнера портала.
     */
    className?: string;
}
export declare const AppRootPortal: ({ children, usePortal, className, }: AppRootPortalProps) => React.ReactNode;
//# sourceMappingURL=AppRootPortal.d.ts.map