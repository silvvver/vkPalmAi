import * as React from 'react';
import type { HTMLAttributesWithRootRef } from '../../types';
export interface MiniInfoCellProps extends HTMLAttributesWithRootRef<HTMLDivElement> {
    /**
     * Иконка слева.<br />
     * Рекомендуется использовать иконки размера 20.
     */
    before?: React.ReactNode;
    /**
     * Содержимое справа.<br />
     * `<UsersStack size="s" />` или `<Avatar size={24} />`.
     */
    after?: React.ReactNode;
    /**
     * Тип ячейки:
     *
     * - `base` – базовая ячейка с серой иконкой и серым текстом.<br />
     * В компонент можно передать `Link`, чтобы визуально сделать часть текста ссылкой.
     * - `add` – тип ячейки, который показывает, что взаимодействие с ней должно вызывать действие добавления чего-то.
     * - `more` – взаимодействие с такой ячейкой должно открывать какую-то подробную информацию.
     */
    mode?: 'base' | 'accent' | 'add' | 'more';
    /**
     * Тип отображения текста:
     *
     * - `nowrap` – в одну строку, текст не переносится и обрезается.
     * - `short` – максимально отображается 3 строки, остальное обрезается.
     * - `full` – текст отображается полностью. В дизайне это свойство `multiline`.
     */
    textWrap?: 'nowrap' | 'short' | 'full';
    /**
     * Передавать `true`, если предполагается переход при нажатии на ячейку.
     */
    chevron?: boolean;
}
/**
 * @see https://vkcom.github.io/VKUI/#/MiniInfoCell
 */
export declare const MiniInfoCell: ({ before, after, children, mode, textWrap, chevron, ...restProps }: MiniInfoCellProps) => React.ReactNode;
//# sourceMappingURL=MiniInfoCell.d.ts.map