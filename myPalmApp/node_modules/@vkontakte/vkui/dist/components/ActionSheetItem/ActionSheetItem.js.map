{"version":3,"sources":["../../../src/components/ActionSheetItem/ActionSheetItem.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { classNames, noop } from '@vkontakte/vkjs';\nimport { useAdaptivityWithJSMediaQueries } from '../../hooks/useAdaptivityWithJSMediaQueries';\nimport { usePlatform } from '../../hooks/usePlatform';\nimport { Keys, pressedKey } from '../../lib/accessibility';\nimport { ActionSheetContext, type ActionSheetContextType } from '../ActionSheet/ActionSheetContext';\nimport { Tappable } from '../Tappable/Tappable';\nimport { Subhead } from '../Typography/Subhead/Subhead';\nimport { Text } from '../Typography/Text/Text';\nimport { Title } from '../Typography/Title/Title';\nimport { isRealClickEvent } from './helpers';\nimport { Radio } from './subcomponents/Radio/Radio';\nimport styles from './ActionSheetItem.module.css';\n\nexport interface ActionSheetItemProps\n  extends React.HTMLAttributes<HTMLElement>,\n    React.AnchorHTMLAttributes<HTMLElement>,\n    Pick<React.InputHTMLAttributes<HTMLInputElement>, 'name' | 'checked' | 'value'> {\n  /**\n   * Свойство, определяющее внешний вид элемента действия.\n   */\n  mode?: 'default' | 'destructive' | 'cancel';\n  /**\n   * Если указано, элемент будет использоваться как ссылка.\n   */\n  href?: string;\n  /**\n   * Атрибут `target` для тега `<a>`.\n   */\n  target?: string;\n  /**\n   * Иконка или другой React-элемент для отображения перед основным контентом.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка или другой React-элемент для отображения после основного контента.\n   */\n  after?: React.ReactNode;\n  /**\n   * Дополнительная информация, отображаемая рядом с основным контентом.\n   */\n  meta?: React.ReactNode;\n  /**\n   * Слот для подсказки или вспомогательного текста.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * По умолчанию нажатие на опцию вызывает переданную в `ActionSheet` функцию `onClose`, данное свойство\n   * позволяет отключить такое поведение.\n   */\n  autoCloseDisabled?: boolean;\n  /**\n   * Включает возможность выбрать элемент (отображает радиокнопку).\n   */\n  selectable?: boolean;\n  /**\n   * Блокировка взаимодействия с компонентом.\n   */\n  disabled?: boolean;\n  /**\n   * Все текстовые элементы при необходимости занимают несколько строк.\n   */\n  multiline?: boolean;\n  /**\n   * По умолчанию `onClick` будет вызван после завершения анимации скрытия и после вызова `onClose`.\n   * Из этого следует, что в объекте события значения полей типа `currentTarget` будут не определены.\n   * Если вам нужен объект события именно на момент нажатия, используйте `onImmediateClick`.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  /**\n   * Обработчик нажатия, вызывающийся непосредственно в момент нажатия (в отличие от `onClick`).\n   */\n  onImmediateClick?: React.MouseEventHandler<HTMLElement>;\n  /**\n   * Иконка для `selectable` режима.\n   */\n  iconChecked?: React.ReactNode;\n  /**\n   * Позволяет отделить `ActionItem` от `CancelItem` для определении того,\n   * кто вызвал закрытие `ActionSheet`. Используется в `ActionSheet.onClose()`.\n   */\n  isCancelItem?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ActionSheetItem\n */\nexport const ActionSheetItem = ({\n  children,\n  autoCloseDisabled = false,\n  mode = 'default',\n  meta,\n  subtitle,\n  before,\n  after,\n  selectable,\n  value,\n  name,\n  checked,\n  defaultChecked,\n  onChange,\n  onClick,\n  onImmediateClick,\n  multiline = false,\n  iconChecked,\n  isCancelItem,\n  ...restProps\n}: ActionSheetItemProps): React.ReactNode => {\n  const platform = usePlatform();\n  const {\n    onItemClick = () => noop,\n    mode: actionSheetMode,\n    onClose: onActionSheetClose,\n  } = React.useContext<ActionSheetContextType<HTMLElement>>(ActionSheetContext);\n  const { sizeY } = useAdaptivityWithJSMediaQueries();\n\n  const Component: React.ElementType | undefined = selectable ? 'label' : undefined;\n\n  const isRich = subtitle || meta || selectable;\n  const isCentered = !isRich && !before && platform === 'ios';\n\n  const onItemClickHandler = React.useCallback(\n    (e: React.MouseEvent) => {\n      onItemClick({\n        action: onClick,\n        immediateAction: onImmediateClick,\n        autoClose: !autoCloseDisabled,\n        isCancelItem: Boolean(isCancelItem),\n      })?.(e);\n    },\n    [autoCloseDisabled, isCancelItem, onClick, onImmediateClick, onItemClick],\n  );\n\n  const onKeyDown: React.KeyboardEventHandler<HTMLElement> = React.useCallback(\n    (event) => {\n      if (pressedKey(event) === Keys.ENTER) {\n        onActionSheetClose?.();\n      }\n    },\n    [onActionSheetClose],\n  );\n\n  const onItemClickImpl: React.MouseEventHandler<HTMLElement> = React.useCallback(\n    (event) => {\n      if (selectable) {\n        if (isRealClickEvent(event)) {\n          onItemClickHandler(event);\n        }\n      } else {\n        onItemClickHandler(event);\n      }\n    },\n    [onItemClickHandler, selectable],\n  );\n\n  return (\n    <Tappable\n      {...(Component && { Component })}\n      {...restProps}\n      onClick={onItemClickImpl}\n      activeMode={platform === 'ios' ? styles.active : undefined}\n      baseClassName={classNames(\n        styles.host,\n        platform === 'ios' && styles.ios,\n        mode === 'cancel' && styles.modeCancel,\n        mode === 'destructive' && styles.modeDestructive,\n        sizeY === 'compact' && styles.sizeYCompact,\n        isRich && styles.rich,\n        actionSheetMode === 'menu' && styles.menu,\n        restProps.disabled && styles.disabled,\n      )}\n      onKeyDown={onKeyDown}\n    >\n      {before && <div className={styles.before}>{before}</div>}\n      <div className={classNames(styles.container, !multiline && styles.ellipsis)}>\n        <div className={classNames(styles.content, isCentered && styles.centered)}>\n          {platform === 'ios' ? (\n            <Title\n              className={styles.children}\n              weight={mode === 'cancel' ? '2' : '3'}\n              level={isCentered ? '2' : '3'}\n            >\n              {children}\n            </Title>\n          ) : (\n            <Text className={styles.children}>{children}</Text>\n          )}\n          {meta && <Text className={styles.meta}>{meta}</Text>}\n        </div>\n        {subtitle && <Subhead className={styles.subtitle}>{subtitle}</Subhead>}\n      </div>\n      {(selectable || after) && (\n        <div className={styles.after}>\n          {after}\n          {selectable && (\n            <Radio\n              name={name}\n              value={value}\n              onChange={onChange}\n              defaultChecked={defaultChecked}\n              checked={checked}\n              disabled={restProps.disabled}\n            >\n              {iconChecked}\n            </Radio>\n          )}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n"],"names":["React","classNames","noop","useAdaptivityWithJSMediaQueries","usePlatform","Keys","pressedKey","ActionSheetContext","Tappable","Subhead","Text","Title","isRealClickEvent","Radio","ActionSheetItem","children","autoCloseDisabled","mode","meta","subtitle","before","after","selectable","value","name","checked","defaultChecked","onChange","onClick","onImmediateClick","multiline","iconChecked","isCancelItem","restProps","platform","onItemClick","actionSheetMode","onClose","onActionSheetClose","useContext","sizeY","Component","undefined","isRich","isCentered","onItemClickHandler","useCallback","e","action","immediateAction","autoClose","Boolean","onKeyDown","event","ENTER","onItemClickImpl","activeMode","baseClassName","disabled","div","className","weight","level"],"mappings":"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"}