import * as React from 'react';
import { type TappableProps } from '../Tappable/Tappable';
export interface BannerProps extends Omit<TappableProps, 'title' | 'size'> {
    /**
     * Тип баннера.
     */
    mode?: 'tint' | 'image';
    /**
     * Размер баннера.
     */
    size?: 's' | 'm';
    /**
     * Тип действия в правой части баннера.
     *
     * - `dismiss` – отображается иконка крестика, при нажатии на неё сработает свойство `onDismiss`.
     * - `chevron` – отображается иконка шеврона, которая подразумевает, что при нажатии на баннер можно куда-то перейти.
     */
    after?: 'dismiss' | 'chevron' | React.ReactNode;
    /**
     * Срабатывает при нажатии на иконку крестика при `after="dismiss"`.
     */
    onDismiss?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Текст кнопки закрытия. Делает ее доступной для ассистивных технологий.
     */
    dismissLabel?: string;
    /**
     * Содержимое, отображаемое в левой части баннера.
     */
    before?: React.ReactNode;
    /**
     * Заголовок.
     */
    title?: React.ReactNode;
    /**
     * Подзаголовок.
     */
    subtitle?: React.ReactNode;
    /**
     * Дополнительный подзаголовок баннера.
     */
    extraSubtitle?: React.ReactNode;
    /**
     * При использовании `mode="image"`.
     *
     * - `light` – в качестве фона используется светлое изображение, цвет текста в баннере будет тёмным.
     * - `dark` – в качестве фона используется тёмное изображение, цвет текста будет светлым.
     */
    imageTheme?: 'light' | 'dark';
    /**
     * При использовании `mode="image"`.
     *
     * Элемент, который нужно стилизовать цветом и/или фоном. Этот элемент будет растянут на 100% ширины и высоты баннера.
     */
    background?: React.ReactNode;
    /**
     * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button).
     *
     * - В режиме `tint` или `image` со светлым фоном используйте только с параметрами:
     *    - `mode="primary"`
     *    - `mode="secondary"`
     * - В режиме `image` с тёмным фоном используйте с параметрами:
     *    - `appearance="overlay"`.
     *
     * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:
     *
     * - `gap="m" mode="horizontal" stretched`
     * - `gap="m" mode="vertical" stretched`.
     */
    actions?: React.ReactNode;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Banner
 */
export declare const Banner: ({ mode, imageTheme, size, before, after: afterProp, title, subtitle, extraSubtitle, children, background, actions, onDismiss, dismissLabel, Component, ...restProps }: BannerProps) => React.ReactNode;
//# sourceMappingURL=Banner.d.ts.map