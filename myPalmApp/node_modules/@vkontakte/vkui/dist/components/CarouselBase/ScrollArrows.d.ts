import * as React from 'react';
import { type BaseGalleryProps } from './types';
export declare const getArrowClassName: (side: "start" | "end", arrowAreaHeight: Exclude<BaseGalleryProps["arrowAreaHeight"], undefined>) => string;
export interface ScrollArrowsTestIds {
    /**
     * Передает атрибут `data-testid` для кнопки перехода к следующему слайду.
     */
    nextArrowTestId?: string;
    /**
     * Передает атрибут `data-testid` для кнопки перехода к предыдущему слайду.
     */
    prevArrowTestId?: string;
}
interface ScrollArrowsProps extends Pick<BaseGalleryProps, 'showArrows' | 'arrowSize' | 'arrowAreaHeight'>, ScrollArrowsTestIds {
    hasPointer?: boolean;
    canSlideLeft: boolean;
    canSlideRight: boolean;
    onSlideLeft: (e: React.MouseEvent) => void;
    onSlideRight: (e: React.MouseEvent) => void;
}
export declare const ScrollArrows: ({ hasPointer, canSlideLeft, canSlideRight, onSlideRight, onSlideLeft, showArrows, arrowSize, arrowAreaHeight, nextArrowTestId, prevArrowTestId, }: ScrollArrowsProps) => import("react/jsx-runtime").JSX.Element | null;
export {};
//# sourceMappingURL=ScrollArrows.d.ts.map