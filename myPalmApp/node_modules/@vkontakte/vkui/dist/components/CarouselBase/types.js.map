{"version":3,"sources":["../../../src/components/CarouselBase/types.ts"],"sourcesContent":["/* eslint-disable jsdoc/require-jsdoc */\nimport type * as React from 'react';\nimport type { HasAlign, HasRef, HTMLAttributesWithRootRef } from '../../types';\nimport type { ScrollArrowProps } from '../ScrollArrow/ScrollArrow';\nimport type { CustomTouchEvent, CustomTouchEventHandler } from '../Touch/Touch';\nimport { type BulletsTestIds } from './Bullets';\nimport { type ScrollArrowsTestIds } from './ScrollArrows';\n\nexport interface GallerySlidesState {\n  coordX: number;\n  width: number;\n}\n\nexport interface LayoutState {\n  containerWidth: number;\n  viewportOffsetWidth: number;\n  layerWidth: number;\n  min?: number;\n  max: number;\n  slides: GallerySlidesState[];\n  isFullyVisible: boolean;\n}\n\nexport interface LoopPoint {\n  /**\n   * Индекс слайда.\n   */\n  index: number;\n  /**\n   * Функция, которая по текущему сдвигу галереи определяет нужный сдвиг слайда.\n   */\n  target: (this: void, location: number) => void;\n}\n\nexport interface ControlElementsState {\n  /**\n   * Отвечает за отображение стрелки влево.\n   */\n  canSlideLeft: boolean;\n  /**\n   * Отвечает за отображение стрелки вправо.\n   */\n  canSlideRight: boolean;\n  /**\n   * Возможность листать слайды drag'ом.\n   */\n  isDraggable: boolean;\n}\n\nexport interface SlidesManagerState {\n  /**\n   * Общая ширина всех слайдов.\n   */\n  contentSize: number;\n  /**\n   * Массив с пограничными точками слайдов, которые необходимо смещать, чтобы они всегда были в области видимости\n   * (пример: для последнего слайда это n-первых слайдов, необходимых для заполнения оставшейся ширины,\n   * или для первого слайда это n-последних слайдов при выравнивании по центру).\n   */\n  loopPoints: LoopPoint[];\n  /**\n   * Массив с правыми границами слайдов.\n   */\n  snaps: number[];\n  /**\n   * Ширина видимой области слайдов.\n   */\n  viewportOffsetWidth: number;\n  /**\n   * Массив слайдов с координатой начала слайда и шириной.\n   */\n  slides: GallerySlidesState[];\n  /**\n   * Все слайды видимы без скрола.\n   */\n  isFullyVisible: boolean;\n  min: number | null;\n  max: number | null;\n  containerWidth: number;\n  layerWidth: number;\n}\n\nexport interface BaseGalleryProps\n  extends Omit<HTMLAttributesWithRootRef<HTMLDivElement>, 'onChange' | 'onDragStart' | 'onDragEnd'>,\n    HasAlign,\n    HasRef<HTMLElement>,\n    BulletsTestIds,\n    ScrollArrowsTestIds {\n  slideWidth?: string | number;\n  slideIndex?: number;\n  onDragStart?: CustomTouchEventHandler;\n  onDragEnd?: (e: CustomTouchEvent, targetIndex: number) => void;\n  onChange?: (current: number) => void;\n  /**\n   * Будет вызвано при нажатии на кнопку-стрелку влево.\n   */\n  onPrevClick?: (event: React.MouseEvent) => void;\n  /**\n   * Будет вызвано при нажатии на кнопку-стрелку вправо.\n   */\n  onNextClick?: (event: React.MouseEvent) => void;\n  bullets?: 'dark' | 'light' | false;\n  /**\n   * Позволяет отключить реагирование на тач-события.\n   */\n  dragDisabled?: boolean;\n  showArrows?: boolean;\n  /**\n   * Размер активной зоны стрелок (в пикселях).\n   * Определяет область вокруг стрелок, реагирующую на взаимодействие пользователя. В дизайне свойство называется `arrowArea`.\n   */\n  arrowAreaHeight?: 'stretch' | 'fit';\n  hasPointer?: boolean;\n  arrowSize?: ScrollArrowProps['size'];\n  /**\n   * Текст для кнопки-стрелки влево (назад). Делает ее доступной для ассистивных технологий.\n   */\n  arrowPrevLabel?: string;\n  /**\n   * Текст для кнопки-стрелки вправо (вперед). Делает ее доступной для ассистивных технологий.\n   */\n  arrowNextLabel?: string;\n  /**\n   * Передает атрибут `data-testid` для слайда.\n   */\n  slideTestId?: (index: number) => string;\n  /**\n   * Включает зацикленность слайдов.\n   */\n  looped?: boolean;\n  /**\n   * Тип источника для отслеживания размера:\n   * - `window`: пересчет позиции слайдов будет происходить при изменении размеров `window`\n   * - `element`: пересчет позиции слайдов будет происходить при изменении размеров компонента.\n   */\n  resizeSource?: 'window' | 'element';\n}\n"],"names":[],"mappings":"AAAA,sCAAsC,GAkFtC,WAsDC"}