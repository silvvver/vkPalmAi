import * as React from 'react';
import type { HasRef, HasRootRef } from '../../types';
import { type IconButtonProps } from '../IconButton/IconButton';
export type RenderIconButtonFn = (icon: React.ReactNode, props?: Partial<IconButtonProps>) => React.ReactNode;
export interface SearchProps extends React.InputHTMLAttributes<HTMLInputElement>, HasRootRef<HTMLDivElement>, HasRef<HTMLInputElement> {
    /**
     * Only iOS. Текст кнопки "отмена", которая чистит текстовое поле и убирает фокус.
     */
    after?: React.ReactNode;
    /**
     * Контент, отображаемый перед полем ввода.
     */
    before?: React.ReactNode;
    /**
     * Иконка поиска. Может быть React-элементом или функцией, возвращающей элемент.
     */
    icon?: React.ReactNode | ((renderFn: RenderIconButtonFn) => React.ReactNode);
    /**
     * Обработчик нажатия на иконку поиска.
     */
    onIconClick?: React.PointerEventHandler<HTMLElement>;
    /**
     * Значение поля ввода по умолчанию.
     */
    defaultValue?: string;
    /**
     * Текст для скринридеров, описывающий иконку поиска.
     */
    iconLabel?: string;
    /**
     * Текст для скринридеров, описывающий кнопку очистки.
     */
    clearLabel?: string;
    /**
     * Передает атрибут `data-testid` для кнопки очистки.
     */
    clearButtonTestId?: string;
    /**
     * Удаляет отступы у компонента.
     */
    noPadding?: boolean;
    /**
     * Текст для кнопки Найти.
     */
    findButtonText?: string;
    /**
     * Обработчик, при нажатии на кнопку "Найти".
     */
    onFindButtonClick?: React.MouseEventHandler<HTMLElement>;
    /**
     * Передает атрибут `data-testid` для кнопки поиска.
     */
    findButtonTestId?: string;
}
/**
 * @see https://vkcom.github.io/VKUI/#/Search
 */
export declare const Search: ({ id: idProp, before, className, placeholder, after, getRef, icon: iconProp, onIconClick, style, autoComplete, onChange, iconLabel, clearLabel, clearButtonTestId, noPadding, getRootRef, findButtonText, findButtonTestId, onFindButtonClick, ...inputProps }: SearchProps) => React.ReactNode;
//# sourceMappingURL=Search.d.ts.map